/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 50726
 Source Host           : localhost:3306
 Source Schema         : hl-blog

 Target Server Type    : MySQL
 Target Server Version : 50726
 File Encoding         : 65001

 Date: 30/12/2022 17:36:40
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for blog_comment
-- ----------------------------
DROP TABLE IF EXISTS `blog_comment`;
CREATE TABLE `blog_comment`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论的用户名',
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '邮箱',
  `blog_id` int(11) NULL DEFAULT NULL COMMENT '博客id',
  `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论内容',
  `parent_id` int(11) NULL DEFAULT NULL COMMENT '父评论id',
  `is_admin` tinyint(1) NULL DEFAULT NULL COMMENT '是否是管理员',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '添加时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` int(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 29 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客评论表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_comment
-- ----------------------------
INSERT INTO `blog_comment` VALUES (28, '111', '111@qq.com', 46, '可以', NULL, NULL, '2022-12-30 10:35:13', '2022-12-30 10:35:13', 1);

-- ----------------------------
-- Table structure for blog_info
-- ----------------------------
DROP TABLE IF EXISTS `blog_info`;
CREATE TABLE `blog_info`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '博客标题',
  `summary` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '博客摘要',
  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '博客内容',
  `type` int(11) NULL DEFAULT NULL COMMENT '所属专栏',
  `views` int(10) NULL DEFAULT 0 COMMENT '浏览量',
  `tags` int(11) NULL DEFAULT NULL COMMENT '标签',
  `comments` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论',
  `picture_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '首图地址',
  `is_recommend` tinyint(1) NULL DEFAULT NULL COMMENT '是否开启推荐',
  `is_reprint` tinyint(1) NULL DEFAULT NULL COMMENT '是否开启转载声明',
  `is_appreciation` tinyint(1) NULL DEFAULT NULL COMMENT '是否开启赞赏',
  `is_comment` tinyint(1) NULL DEFAULT NULL COMMENT '是否开启评论',
  `property` int(11) NULL DEFAULT NULL COMMENT '1.原创; 2.转载; 3.翻译',
  `state` tinyint(1) NULL DEFAULT 1 COMMENT '是否发布',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '添加时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 94 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客详情表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_info
-- ----------------------------
INSERT INTO `blog_info` VALUES (28, '判断浏览器是否安装了flash', '浏览器是否安装了flash', '```js\n$(function() {\n  var fls = flashChecker();\n  if (fls.f) {\n    console.log(\'你安装了flash\');\n  } else {\n    console.log(\'你没有安装flash\');\n  }\n});\nfunction flashChecker(){\n  var hasFlash = 0;　　　　 //是否安装了flash\n        var flashVersion = 0;　　 //flash版本\n        if (document.all) {\n                var swf = new ActiveXObject(\'ShockwaveFlash.ShockwaveFlash\');\n                if (swf) {\n                        hasFlash = 1;\n                        VSwf = swf.GetVariable(\"$version\");\n                        flashVersion = parseInt(VSwf.split(\" \")[1].split(\",\")[0]);\n                }\n        } else {\n                if (navigator.plugins && navigator.plugins.length > 0) {\n                        var swf = navigator.plugins[\"Shockwave Flash\"];\n                        if (swf) {\n                                hasFlash = 1;\n                                var words = swf.description.split(\" \");\n                                for (var i = 0; i < words.length; ++i) {\n                                        if (isNaN(parseInt(words[i]))) {\n                                                continue;\n                                        }\n                                        flashVersion = parseInt(words[i]);\n                                }\n                        }\n                }\n        }\n        return {\n                f: hasFlash,\n                v: flashVersion\n        };\n}\n```', 20, 7, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=202585375,853911840&fm=253&fmt=auto&app=138&f=JPEG.webp', NULL, NULL, 1, NULL, 1, 1, '2022-12-30 10:04:53', '2022-12-30 10:45:49', 1);
INSERT INTO `blog_info` VALUES (29, 'layer弹出层---子弹窗层关闭的同时向父弹出层传值', 'layer弹窗', ' - 父弹窗\n ```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    <div id=\"test\"></div>\n    <div id=\"openSonWin\"></div>\n</body>\n</html>\n ```\n```js\n$(\"#openSonWin\").on(\"click\",function(){\n    var index = layer.open({\n        type: 2,\n        title: \'选择浏览人员\',\n        shadeClose: true,\n        shade: false,\n        maxmin: true, //开启最大化最小化按钮\n        area: [\'665px\', \'600px\'],\n        content: \"./son.html\",\n        style: \'position:fixed; left:0; top:0; width:100%; height:100%; border: none; -webkit-animation-duration: .5s; animation-duration: .5s;\',\n        end: function(){\n\n        }\n    })\n})\n```\n- 子窗体\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n   <div id=\"btn\">按钮</div>\n</body>\n</html>\n```\n```js\n$(function(){\n    $(\"#btn\").on(\"click\",function(){\n        $(parent.document.body.children[0]).html(\"传递的值\");\n        var index = parent.layer.getFrameIndex(window.name);\n        parent.layer.close(index);\n    })\n})\n```', 21, 4, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/3.jpg', 1, 1, 1, 1, 1, 1, '2022-12-30 10:04:50', '2022-12-30 10:45:54', 1);
INSERT INTO `blog_info` VALUES (30, '身份证输入验证', '身份证号验证', '```html\n身份证号：<input type=\"text\" id=\"idCard\"><span class=\"id-tips\"></span>\n```\n```js\n$(function() {\n    $(\".idCard\").on(\"input\", function (e) {\n        var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;//身份证格式验证\n        var reg_Ch = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/g;//汉字验证\n        e.target.value = e.target.value.replace(reg_Ch, \"\");\n        var val = e.target.value;\n        if (!val.length) {\n            $(this).next().html(\"身份证号不能为空！\");\n        } else if (!reg.test(val)) {\n            $(this).next().html(\"身份证号填写有误！\");\n        } else {\n            $(this).next().html(\"\");\n        }\n    })\n})\n```', 22, 3, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/1.jpg', 0, 1, NULL, NULL, 1, 1, '2022-12-28 15:05:42', '2022-12-30 10:46:10', 1);
INSERT INTO `blog_info` VALUES (31, '判断浏览器的类型', '判断浏览器类型', '```js\n$(function() {\n            var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n            var isOpera = userAgent.indexOf(\"Opera\") > -1;\n            //判断是否Opera浏览器\n            if (isOpera) {\n                console.log(\"Opera\");\n                return \"Opera\"\n            };\n            //判断是否Firefox浏览器\n            if (userAgent.indexOf(\"Firefox\") > -1) {\n                console.log(\"Firefox\");\n                return \"FF\";\n            }\n            //判断是否chorme浏览器\n            if (userAgent.indexOf(\"Chrome\") > -1) {\n                console.log(\"Chrome\");\n                return \"Chrome\";\n            }\n            //判断是否Safari浏览器\n            if (userAgent.indexOf(\"Safari\") > -1) {\n                console.log(\"Safari\");\n                return \"Safari\";\n            }\n            //判断是否IE浏览器\n            if (userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1 && !isOpera) {\n                console.log(\"IE\");\n                return \"IE\";\n            }\n            //判断是否Edge浏览器\n            if (userAgent.indexOf(\"Trident\") > -1) {\n                console.log(\"Edge\");\n                return \"Edge\";\n            };\n        })\n```', 21, 8, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=520548276,2227732353&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 15:15:50', '2022-12-30 10:47:56', 1);
INSERT INTO `blog_info` VALUES (32, 'document.documentMode', '文档模式', '```js\n// documentMode 属性返回浏览器渲染文档的模式\n// documentMode 是IE浏览器特定属性，在IE8及之后的IE版本都支持该属性\n\n// element-ui源码中判断浏览器的类型\nexport const isIE = function() {\n  return !Vue.prototype.$isServer && !isNaN(Number(document.documentMode));\n};\n\nexport const isEdge = function() {\n  return !Vue.prototype.$isServer && navigator.userAgent.indexOf(\'Edge\') > -1;\n};\n\nexport const isFirefox = function() {\n  return !Vue.prototype.$isServer && !!window.navigator.userAgent.match(/firefox/i);\n};\n```', 21, 0, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=1210945873,1884155602&fm=253&fmt=auto&app=120&f=JPEG (1).webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 15:25:23', '2022-12-28 15:25:23', 1);
INSERT INTO `blog_info` VALUES (33, '拖拽窗体', '拖拽窗体', '```html\n<div class=\"window\">\n    <div class=\"title\"></div>\n    <div class=\"content\">内容区域</div>\n</div>\n```\n\n```css\n.window{\n    position: absolute;\n    width: 600px;\n    height: 400px;\n    top: 50%;\n    left: 50%;\n    margin-left: -300px;\n    margin-top: -200px;\n}\n.window .title{\n    height: 50px;\n    background-color: #ccc;\n}\n```\n```js\n$(function(){\n    doDrag($(\".window\"),$(\".title\"));\n});\n/**\n * 拖动窗体\n * @param parentNode 窗体的标签\n * @param self 指定鼠标进入时可拖动的区域\n */\nfunction doDrag(parentNode,self){\n    var disX = 0;\n    var disY = 0;\n    var marginLeft = parseInt(parentNode.css(\"margin-left\"));\n    var marginTop = parseInt(parentNode.css(\"margin-top\"));\n    self.mousedown(function(e){\n        e = e || event;\n        e.preventDefault();\n        disX = e.clientX - self.offset().left;\n        disY = e.clientY - self.offset().top;\n        $(document).mousemove(function(e){\n            e = e || event;\n            var left = e.clientX - disX - marginLeft;\n            var top = e.clientY - disY - marginTop;\n            var minLeft = 0;\n            var minTop = 0;\n            var maxLeft = $(window).width() - parseInt(parentNode.css(\"width\")) / 2 - 10;\n            var maxTop = $(window).height() - parseInt(parentNode.css(\"height\")) / 2 - 60;\n            if(left < minLeft - marginLeft){\n                left = minLeft - marginLeft + 10;\n            }else if(left > maxLeft){\n                left = maxLeft;\n            }\n            if(top < minTop - marginTop){\n                top = minTop - marginTop + 10;\n            }else if(top > maxTop){\n                top = maxTop;\n            }\n            parentNode.css({\n                left: left,\n                top: top\n            });\n        });\n        $(document).mouseup(function(){\n            $(document).unbind(\"mousemove\");\n            $(document).unbind(\"mouseup\");\n        })\n    })\n}\n```', 21, 1, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=3490381478,1327095451&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, NULL, 1, 1, 1, '2022-12-28 15:30:38', '2022-12-28 15:31:22', 1);
INSERT INTO `blog_info` VALUES (34, '框架中不同标签页之前的标签操作', '框架中的标签操作', '```html\n<!-- a.html -->\n<button id=\"button\">按钮</button>\n<!-- b.html -->\n<button id=\"test\">test</button>\n```\n```js\n$(\"#button\").on(\"click\",function(){\n    //其中\"iframe11\"是iframe标签的name值\n    $(parent.frames[\'iframe11\'].document.getElementById(\"test\")).trigger(\"click\");\n})\n```', 21, 1, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=2930719993,2577592180&fm=253&fmt=auto&app=138&f=PNG.webp', 1, NULL, NULL, 1, 1, 1, '2022-12-30 10:04:47', '2022-12-28 15:34:20', 1);
INSERT INTO `blog_info` VALUES (35, '不同标签的操作，其中一个还包含frameset结构时', '标签操作', '```html\n<!-- a.html -->\n<button id=\"button\">按钮</button>\n<!-- b.html -->\n<frameset id=\"StudyBottom\" name=\"StudyBottom\" border=\"0\" frameSpacing=\"0\" frameBorder=\"0\" cols=\"160,*\"\n            runat=\"server\">\n    <frame id=\"studytree\" name=\"studytree\" src=\"JoinStudyTree.aspx\" scrolling=\"auto\" runat=\"server\" noresize>\n    </frame>\n    <frame id=\"studymain\" name=\"studymain\" src=\"c.html\" scrolling=\"auto\" runat=\"server\">\n    </frame>\n    <noframes>\n        <body>\n            <p>此网页使用了框架，但您的浏览器不支持框架。</p>\n        </body>\n    </noframes>\n</frameset>\n<!-- c.html -->\n<span id=\"start\"></span>\n```\n```js\n//点击a中的按钮时，获取b页面中c页面的值\n$(\"#button\").on(\"click\",function(){\n    //\"iframe13\"是b页面的iframe的name值\n    var studymain = parent.frames[\"iframe13\"].document.getElementById(\"studymain\");\n    var start = studymain.contentWindow.document.getElementById(\"StartTime\");\n    $(start).html(\"修改成功\");\n})\n```', 21, 0, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 15:46:03', '2022-12-28 15:46:03', 1);
INSERT INTO `blog_info` VALUES (36, '固定表头，使表格内容出现滚动条', '表格相关', '```html\n<table class=\"table\">\n    <thead>\n    <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Category</th>\n        <th>MonthAmount</th>\n        <th>hasBackUp</th>\n        <th>score</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n    <tr>\n        <td>23</td>\n        <td>South Bearing</td>\n        <td>Glass/Material</td>\n        <td>1234444</td>\n        <td>TRUE</td>\n        <td>3456.00</td>\n    </tr>\n\n    </tbody>\n</table>\n```\n```css\n.table thead tr {\n    display:block;\n}\n.table tbody {\n    display: block;\n    height: 200px;\n    overflow: auto;\n}\n.table th {\n    width:20%;\n}\n.table td {\n    width:20%;\n}\n```', 21, 0, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/1.jpg', 1, NULL, 1, NULL, 1, 1, '2022-12-28 15:48:21', '2022-12-28 15:48:21', 1);
INSERT INTO `blog_info` VALUES (37, '为动态添加的元素绑定laydate时间控件', 'laydate时间控件', '```html\n<div id=\"app\">\n    <div>\n        <p v-for=\"(item,index) in list\">\n            <span>{{item}}</span>\n            <input type=\"text\" class=\"ipt\">\n            <button ref=\"remove\" @click=\"remove\" id=\"remove\">remove</button>\n        </p>\n    </div>\n    <button @click=\"add\" id=\"add\">add</button>\n</div>\n```\n```js\nvar vm = new Vue({\n    el: \"#app\",\n    data: {\n        list: [\"m\"],\n        msg: \"123\"\n    },\n    methods: {\n        add(){\n            //在添加元素的时候绑定渲染\n            this.list.push(\"h\");\n            layui.use(\"laydate\",function(){\n                var laydate = layui.laydate;\n                lay(\'.ipt\').each(function() {\n                    laydate.render({\n                        elem: this\n                    });\n                });\n            })\n        }\n    },\n    created(){\n        layui.use(\"laydate\",function(){\n            var laydate = layui.laydate;\n            lay(\'.ipt\').each(function() {\n                laydate.render({\n                    elem: this\n                });\n            });\n        })\n    }\n});\n\n```', 21, 0, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/2.jpg', 1, NULL, 1, NULL, 1, 1, '2022-12-30 10:04:42', '2022-12-28 15:52:28', 1);
INSERT INTO `blog_info` VALUES (38, '将数组中具有相同值的对象取出，组成新的数组', '数组操作', '```js\n\nvar arr = [{name:2,id:3},{name:2,id:4},{name:3,id:5},{name:3,id:6},{name:1,id:1},{name:1,id:2}];\nconsole.log(sortArr(arr,\"name\"));\n// 传入一个数组\n// 按照特定方式格式化\nfunction sortArr(arr, str) {\n    var _arr = [],\n        _t = [],\n        // 临时的变量\n        _tmp;\n \n    // 按照特定的参数将数组排序将具有相同值得排在一起\n    arr = arr.sort(function(a, b) {\n        var s = a[str],\n            t = b[str];\n \n        return s < t ? -1 : 1;\n    });\n \n    if ( arr.length ){\n        _tmp = arr[0][str];\n    }\n    // console.log( arr );\n    // 将相同类别的对象添加到统一个数组\n    for (var i in arr) {\n        if ( arr[i][str] === _tmp ){\n            console.log(_tmp)\n            _t.push( arr[i] );\n        } else {\n            _tmp = arr[i][str];\n            _arr.push( _t );\n            _t = [arr[i]];\n        }\n    }\n    // 将最后的内容推出新数组\n    _arr.push( _t );\n    return _arr;\n}\n```', 20, 0, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/3.jpg', 1, NULL, 1, NULL, 1, 1, '2022-12-30 10:04:45', '2022-12-28 16:00:39', 1);
INSERT INTO `blog_info` VALUES (39, 'layui的下拉框与vue的双向数据绑定问题', 'layui相关', '```html\n<select v-model=\"list.type\">\n    <option value=\"\">请选择</option>\n    <option v-for=\"item in typeList\" :value=\"item.typeValue\">{{item.typeName}}</option>\n</select>\n```\n```js\n//关键在于弹窗显示后，延迟50ms执行form.render(\"select\")\nnew Vue({\n    el: \"\",\n    data(){\n        return {\n            typeList: [\n                { typeName: \"保单\", typeValue: 0},\n                { typeName: \"保费\", typeValue: 1}\n            ],\n        }\n    },\n    methods: {\n\n    },\n    watch: {\n        show: funciton(newVal){\n            if(newVal){\n                setTimeout(funciton(){\n                    layui.use(\"form\",function(){\n                        var form = layui.form;\n                        form.render(\"select\");\n                    })\n                })\n            }\n        }\n    }\n})\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/4.jpg', 1, NULL, 1, NULL, 1, 1, '2022-12-28 16:04:08', '2022-12-28 16:06:36', 1);
INSERT INTO `blog_info` VALUES (40, '前端上传图片预览', '图片预览', '```html\n<input type=\"file\" id=\"chooseImage\">\n<img src=\"\" id=\"cropedBigImg\" alt=\"\">\n```\n```js\n$(\'#chooseImage\').on(\'change\', function() {//当chooseImage的值改变时，执行此函数\n    var filePath = $(this).val(), //获取到input的value，里面是文件的路径\n        src = window.URL.createObjectURL(this.files[0]); //转成可以在本地预览的格式\n    $(\'#cropedBigImg\').css(\'display\',\'block\');\n    $(\'#cropedBigImg\').attr(\'src\', src);\n});\n\n```', 20, 1, 13, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=267767918,2886226332&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 16:08:18', '2022-12-28 16:09:33', 1);
INSERT INTO `blog_info` VALUES (41, 'layui时间控件一闪而过问题', 'layui相关', '```html\n <input type=\"text\" id=\"ipt\">\n```\n```js\nlayui.use(\"laydate\", function(){\n        var laydate = layui.laydate;\n        laydate.render({\n            elem: \"#ipt\",\n            trigger: \"click\",//该属性可解决时间控件弹出框闪退的问题\n        })\n    })\n```', 20, 3, 13, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=202585375,853911840&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 16:11:07', '2022-12-28 16:14:18', 1);
INSERT INTO `blog_info` VALUES (42, '在vue项目中使用layui', 'layui相关', '1. 将下载好的layui文件夹放在static文件下\n2. 在HTML中引入对应文件\n3. 通过`layui.use()`就可以使用相应的模块\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <title>new_website</title>\n    <link rel=\"stylesheet\" href=\"./static/layui/css/layui.css\">\n    <script src=\"./static/layui/layui.js\"></script>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\n```', 20, 0, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=520548276,2227732353&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, NULL, 1, NULL, 1, 1, '2022-12-28 16:16:32', '2022-12-28 16:16:32', 1);
INSERT INTO `blog_info` VALUES (43, '将平面json格式转为json格式', '数据转换', '```js\n/**\n* 把平铺的数组结构转成树形结构\n*/\nconst arr = [\n    { \'id\': \'29\', \'pid\': \'\',     \'name\': \'总裁办\' },\n    { \'id\': \'2c\', \'pid\': \'\',     \'name\': \'财务部\' },\n    { \'id\': \'2d\', \'pid\': \'2c\', \'name\': \'财务核算部\'},\n    { \'id\': \'2f\', \'pid\': \'2c\', \'name\': \'薪资管理部\'},\n    { \'id\': \'d2\', \'pid\': \'\',     \'name\': \'技术部\'},\n    { \'id\': \'d3\', \'pid\': \'d2\', \'name\': \'Java研发部\'},\n    { \'id\': \'d4\', \'pid\': \'d3\', \'name\': \'Java研发部-1组\'}\n]\n\n// 在list找pid为第二次参数的元素，组成一个数组\nfunction findChildren(list, pid) {\n    // 在list中根据pid来找元素\n    let treeList = []\n    treeList = list.filter(it => it.pid === pid)\n    /**\n		* [\n		*   { \'id\': \'29\', \'pid\': \'\',     \'name\': \'总裁办\',children:[] },\n		*   { \'id\': \'2c\', \'pid\': \'\',     \'name\': \'财务部\' },\n		*   { \'id\': \'d2\', \'pid\': \'\',     \'name\': \'技术部\'}\n		* ]\n		* */\n\n    treeList.forEach(item => {\n        item.children = findChildren(list, item.id)\n    })\n    return treeList\n}\n\nconst treeList = findChildren(arr,\'\')\nconsole.log(\'转换之后的树\',treeList);\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=529657752,2140000372&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 16:21:40', '2022-12-28 16:21:47', 1);
INSERT INTO `blog_info` VALUES (44, '限制输入框只能输入数字', '输入框只能输入数字', '```js\n$(\"#ipt\").on(\"input\", function(){\n    this.value = this.value.replace(/[^\\d\\.]/g, \'\');\n})\n```', 20, 0, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 16:23:41', '2022-12-28 16:23:41', 1);
INSERT INTO `blog_info` VALUES (45, 'react图片问题', '图片', 'img的图片要放在public里面才能正常显示，而background-img的URL要放在src的子目录下', 20, 0, 8, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 16:26:12', '2022-12-28 16:26:12', 1);
INSERT INTO `blog_info` VALUES (46, '不通过AppleStore下载ios安装包(ipa)', '安装ios', '```html\n<a href=\"itms-services://?action=download-manifest&url=https://raw.githubusercontent.com/Zard1991/JustCode/master/iChat.plist\">下载IOS版</a>\n```\n- `*.plist`的内容\n```html\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n    <dict>\n        <key>items</key>\n        <array>\n            <dict>\n                <key>assets</key>\n                <array>\n                    <dict>\n                        <key>kind</key>\n                        <string>software-package</string>\n                        <key>url</key>\n                        <string>http://10.128.8.15:8443/GFZQ/imos/move/ios/FinChat.ipa</string>\n                    </dict>\n                </array>\n                <key>metadata</key>\n                <dict>\n                    <key>bundle-identifier</key>\n                    <string>cn.com.gf.ichat</string>\n                    <key>bundle-version</key>\n                    <string>1240</string>\n                    <key>kind</key>\n                    <string>software</string>\n                    <key>title</key>\n                    <string>iChat</string>\n                </dict>\n            </dict>\n        </array>\n    </dict>\n</plist>\n\n```\n**注意：** a标签里面的URL需要是https的连接，地址为`*.plist`的文件地址，文件中的URL是安装包的全地址，可以不是https的地址(将`*.plist`文件上传到GitHub上，就是一个https的地址)', 20, 4, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=1987026386,2214862957&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-30 10:04:55', '2022-12-30 10:45:42', 1);
INSERT INTO `blog_info` VALUES (47, '滚动条样式', '样式', '```css\n::-webkit-scrollbar-thumb {\n	height: 32px;\n	background: #d1d1d1;\n	outline-offset: 2px;\n	outline: 2px solid #fff;\n	border-radius: 6px;\n	border: 0px solid #fff;\n}\n\n::-webkit-scrollbar-thumb:HOVER {\n	background: #828282;\n}\n\n::-webkit-scrollbar-thumb:ACTIVE {\n	background: #747474;\n}\n\n::-webkit-scrollbar {\n	width: 6px;\n	height: 10px;\n}\n::-webkit-scrollbar-track-piece {\n	background-color: transparent;\n	border-radius: 0;\n}\n\n```', 20, 2, 12, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=1210945873,1884155602&fm=253&fmt=auto&app=120&f=JPEG (1).webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 16:35:17', '2022-12-28 16:39:21', 1);
INSERT INTO `blog_info` VALUES (48, '删除数组中指定的元素', '数组操作', '```js\narr.splice(arr.findIndex(item => item.id === data.id), 1);\n```', 20, 0, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 16:36:55', '2022-12-28 16:36:55', 1);
INSERT INTO `blog_info` VALUES (49, 'label和checkbox点击事件触发两次问题', 'label和checkbox', '**原因：** label和input标签嵌套，点击label的时候，事件冒泡一次，同时会触发关联的input的click事件，导致事件再次冒泡\n**解决方案：**\n\n - 对`e.target`进行判断\n ```html\n    <div class=\"plan-list\">\n        <label>\n            <input type=\"checkbox\" name=\"\">\n        </label>\n    </div>\n```\n```js\ntodayAchieve.on(\"click\", \".plan-list label\", function(e){\n    if($(e.target).is(\"input\")){\n        return;\n    }\n    if($(this).find(\"input\").attr(\"checked\") === \"checked\"){\n        $(this).parent().removeClass(\"completed\");\n    }else{\n        $(this).parent().addClass(\"completed\");\n\n    }\n});\n```', 20, 2, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221228/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-28 17:00:56', '2022-12-29 11:43:56', 1);
INSERT INTO `blog_info` VALUES (50, '判断是从微信浏览器打开还是其他浏览器打开', '浏览器', '```js\nfunction isWeixin(){\n    var userAgent = window.navigator.userAgent.toLowerCase();\n    if (ua.match(/MicroMessenger/i) == \'micromessenger\') { \n        console.log(\"微信浏览器\");       \n    } else { \n        console.log(\"不是微信浏览器\");       \n    } \n}\n```', 21, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=267767918,2886226332&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:43:52', '2022-12-29 11:44:25', 1);
INSERT INTO `blog_info` VALUES (51, '将图片转为base64', '图片相关', '```js\n$(\"#ipt\").change(function() {\n    var file = this.files[0];\n    if(undefined == file){\n        return ;\n    }\n    r = new FileReader(); \n    r.readAsDataURL(file); \n    r.onload = function(e) {\n        var base64 = e.target.result;\n        console.log(base64);\n    }\n});\n\n```', 21, 0, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:45:32', '2022-12-29 11:45:32', 1);
INSERT INTO `blog_info` VALUES (52, '监听退出全屏事件', '浏览器相关', '```js\nvar timer = null;\n$(window).resize(function(){\n	if(timer){\n		clearTimeout(timer);\n	}\n	timer = setTimeout(function(){\n		if(window.innerHeight !== window.screen.height){\n			console.log(\"退出全屏\");\n		}else{\n			console.log(\"进入全屏\");\n		}\n	}, 10)\n})\n```', 21, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:46:50', '2022-12-29 11:47:02', 1);
INSERT INTO `blog_info` VALUES (53, '微信小程序实现瀑布流布局', '微信相关', '```html\n<view class=\"waterfall-container\">\n  <view id=\"left\">\n    <view wx:for=\"{{leftList}}\" wx:key=\"{{item.id}}\" class=\"box-img\">\n      <image src=\"{{item.squareImg}}\" mode=\"widthFix\"></image>\n      <view class=\"desc\">{{item.text}}</view>\n    </view>\n  </view>\n  <view id=\"right\">\n    <view wx:for=\"{{rightList}}\" wx:key=\"{{item.id}}\" class=\"box-img\">\n      <image src=\"{{item.squareImg}}\" mode=\"widthFix\"></image>\n      <view class=\"desc\">{{item.text}}</view>\n    </view>\n  </view>\n</view>\n```\n```css\n.waterfall-container #left,#right{\n    width: 48%;\n    margin: 0 1%;\n    float: left;\n}\n#left image, #right image{\n    width: 100%;\n    border-radius: 15rpx;\n}\n.waterfall-container .box-img{\n    padding-bottom: 20rpx;\n}\n.waterfall-container .desc{\n    font-size: 25rpx;\n    color: #fff;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n}\n```\n```js\nlet leftHeight = 0;\nlet rightHeight = 0;\nlet query;\nPage({\n    data: {\n        squareList: [],\n        leftList: [],\n        rightList: []\n    },\n    async getSquareList(){\n        call.getData(\"getSquare?page=1&limit=10\", async res => {\n            this.setData({\n                squareList: res.data.result\n            });\n            const {leftList, rightList} = this.data;\n            query = wx.createSelectorQuery();\n            for (const item of res.data.result) {\n                leftHeight <= rightHeight ? leftList.push(item) : rightList.push(item); //判断两边的高度，来决定添加到哪一边\n                await this.getBoxHeight(leftList, rightList);\n            }\n        });\n    },\n    getBoxHeight(leftList, rightList){\n        return new Promise((resolve, reject) => {\n            this.setData({ leftList, rightList }, () => {\n                query.select(\"#left\").boundingClientRect();\n                query.select(\"#right\").boundingClientRect();\n                query.exec( res => {\n                    leftHeight = res[0].height; //获取左边列表的高度\n                    rightHeight = res[1].height; //获取右边列表的高度\n                    resolve();\n                })\n            })\n        })\n    },\n    onLoad: function(options){\n        this.getSquareList();\n    }\n})\n\n```', 21, 3, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:48:41', '2022-12-29 11:50:21', 1);
INSERT INTO `blog_info` VALUES (54, '当文字超过两行显示...', 'css相关', '```css\n    .box{\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        line-clamp: 2;\n        -webkit-box-orient: vertical;\n    }\n```', 20, 1, 12, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:50:17', '2022-12-29 11:50:25', 1);
INSERT INTO `blog_info` VALUES (55, '深度去除对象中value为空的属性', 'js相关', '```js\n  function isEmpty(obj) {\n    return (Object.keys(obj).length === 0 && obj.constructor === Object);\n  }\n  function deleteEmptyString(test, recurse) {\n    for (var i in test) {\n      if (test[i] === \'\' ) {\n        delete test[i];\n      } else if (recurse && typeof test[i] === \'object\') {\n        deleteEmptyString(test[i], recurse);\n      }\n    }\n  }\n  function deleteEmptyObject(test, recurse) {\n    for (var i in test) {\n      if (isEmpty(test[i]) ) {\n        delete test[i];\n      } else if (recurse && typeof test[i] === \'object\') {\n        deleteEmptyObject(test[i], recurse);\n      }\n    }\n  }\n  var o = {\n    name:\"name\",\n    age:{\n      age_a:\'\',\n      age_b: \"age_b\"\n    },\n    level:{\n      level_a:\"level_a\",\n      level_b:\'\'\n    },\n    place:{\n      place_a:\"place_a\",\n      place_b:\'\',\n      place_c: {\n        x:\'\',\n        y:\"y\"\n      },\n      place_d:\n        {\n          z:\'\'\n        }\n    }\n  };\n  deleteEmptyString(o, true);\n  console.log(o);\n  deleteEmptyObject(o,true);\n  console.log(o);\n\n```', 20, 2, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 11:52:28', '2022-12-29 13:11:58', 1);
INSERT INTO `blog_info` VALUES (56, 'element-iu的table组件，表格线条对不齐的解决方法', 'element-ui', '```css\nbody .el-table th.gutter {\n    display: table-cell !important\n}\n```', 20, 2, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2930719993,2577592180&fm=253&fmt=auto&app=138&f=PNG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:08:15', '2022-12-29 13:11:55', 1);
INSERT INTO `blog_info` VALUES (57, '在输入框光标位置处插入文本', 'js操作', '```html\n<el-input type=\"textarea\" :rows=\"5\" v-model=\"dataForm.lvUpInfo\" ref=\"lvUpInfoText\"></el-input>\n\n<el-button @click=\"insertText(\'黄初舟\')\">按钮</el-button>\n```\n```js\nmethods: {\n    async insertText(myValue){\n        let selectInfoText = this.$refs.lvUpInfoText.$refs.textarea\n        if (selectInfoText.selectionStart || selectInfoText.selectionStart === 0) {\n            var startPos = selectInfoText.selectionStart\n            var endPos = selectInfoText.selectionEnd\n            this.dataForm.lvUpInfo = selectInfoText.value.substring(0, startPos) + myValue +\n              selectInfoText.value.substring(endPos, selectInfoText.value.length)\n          await this.$nextTick()\n          selectInfoText.focus()\n          selectInfoText.setSelectionRange(endPos + myValue.length, endPos + myValue.length)\n        }else {\n            this.dataForm.lvUpInfo += myValue\n        }\n    }\n}\n\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:26:26', '2022-12-29 13:26:30', 1);
INSERT INTO `blog_info` VALUES (58, '不知道几层v-for递归组件', '递归组件', '```html\n<level-circle :source=\"pathList\">联级选择框</level-circle>\n```\n```js\n    pathList: [\n          {\n            id: 1,\n            text: \'192.168.43.128\',\n            type: \'server\',\n            children: [\n              {\n                id: 11,\n                text: \'home\',\n                type: \'folder\',\n                children: [\n                  {\n                    id: 111,\n                    text: \'aim.md\',\n                    type: \'file\'\n                  },\n                  {\n                    id: 112,\n                    text: \'log.log\',\n                    type: \'file\'\n                  }\n                ]\n              },\n              {\n                id: 12,\n                text: \'gdnx\',\n                type: \'folder\',\n                children: [\n                  {\n                    id: 121,\n                    text: \'test\',\n                    type: \'folder\',\n                    children: [\n                      {\n                        id: 1211,\n                        text: \'test.xml\',\n                        type: \'file\'\n                      }\n                    ]\n                  },\n                  {\n                    id: 122,\n                    text: \'modules\',\n                    type: \'folder\',\n                    children: [\n                      {\n                        id: 1221,\n                        text: \'jquery.js\',\n                        type: \'file\'\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n```\n- LevelCircle组件内部\n```html\n<template>\n    <div class=\"level-circle-container\">\n      <level-circle-item v-for=\"(item, index) in source\" :key=\"index\" :sourceItem=\"item\"></level-circle-item>\n    </div>\n</template>\n```\n```js\n    import LevelCircleItem from \'./levelCircleItem\'\n    export default {\n      name: \'levelCircle\',\n      data () {\n        return {}\n      },\n      components: {\n        LevelCircleItem\n      },\n      props: {\n        source: {\n          type: Array,\n          required: true\n        }\n      }\n    }\n```\n```css\n.level-circle-container{\n    display: flex;\n    justify-content: flex-start;\n  }\n```\n- LevelCircleItem组件内部\n```html\n<template>\n    <div class=\"level-circle-item-container\">\n      <div class=\"item\" @dblclick=\"showDeepLevel(sourceItem)\">\n        <div class=\"type\">\n          <i class=\"el-icon-data-analysis\" v-if=\"sourceItem.type === \'server\'\"></i>\n          <i class=\"el-icon-folder-opened\" v-else-if=\"sourceItem.type === \'folder\'\"></i>\n          <i class=\"el-icon-tickets\" v-else></i>\n        </div>\n        <div class=\"text\">{{sourceItem.text}}</div>\n      </div>\n      <level-circle-item v-if=\"sourceItem.children\" v-for=\"(item, index) in sourceItem.children\" :key=\"index\" :sourceItem=\"item\"></level-circle-item>\n    </div>\n</template>\n```\n```js\nexport default {\n      name: \'levelCircleItem\',\n      data () {\n        return {}\n      },\n      props: {\n        sourceItem: {\n          type: Object,\n          required: true\n        }\n      },\n      methods: {\n        showDeepLevel (item) {\n          console.log(item);\n        }\n      }\n    }\n```\n```css\n.level-circle-item-container{\n  display: flex;\n  justify-content: flex-start;\n  .item{\n    width: 120px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 10px;\n    padding: 15px;\n    cursor: pointer;\n    text-align: center;\n    color: #e0dfe6;\n    i{\n      font-size: 40px;\n    }\n    .text{\n      color: #636363;\n      margin-top: 15px;\n    }\n    &:hover{\n      background: #f5f5f5;\n    }\n  }\n}\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2930719993,2577592180&fm=253&fmt=auto&app=138&f=PNG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:32:30', '2022-12-29 13:32:36', 1);
INSERT INTO `blog_info` VALUES (59, '回显级联选择器深层的级别', 'js操作', '```js\n// 修改时根据传入的cateUid的值，回显级联选择器深层的级别\n    getTreeDeepArr(key, treeData) {\n      const arr = [] // 在递归时操作的数组\n      let returnArr = [] // 存放结果的数组\n      let depth = 0 // 定义全局层级\n      // 定义递归函数\n      function childrenEach(childrenData, depthN) {\n        for (var j = 0; j < childrenData.length; j++) {\n          depth = depthN // 将执行的层级赋值 到 全局层级\n          arr[depthN] = (childrenData[j].uid)\n          if (childrenData[j].uid === key) {\n            returnArr = arr.slice(0, depthN + 1) // 将目前匹配的数组，截断并保存到结果数组，\n            break\n          } else {\n            if (childrenData[j].children) {\n              depth++\n              childrenEach(childrenData[j].children, depth)\n            }\n          }\n        }\n        return returnArr\n      }\n      return childrenEach(treeData, depth)\n    },\n```', 20, 0, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3194704420,4085265848&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:36:26', '2022-12-29 13:36:26', 1);
INSERT INTO `blog_info` VALUES (60, '将数组的字符串转为数字或反向操作', '数组操作', '```js\nvar arr = [1,2,3,4,5]\narr.map(String); // [\'1\',\'2\',\'3\',\'4\',\'5\']\n\nvar a = [\'1\',\'2\',\'3\',\'4\',\'5\']\na.map(Number); // [1,2,3,4,5]\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3441609423,2220916635&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:38:08', '2022-12-29 13:38:11', 1);
INSERT INTO `blog_info` VALUES (61, '关键字高亮', '关键字高亮', '```js\nvar dataExample = \'[00:18:27.460][I]log start:0\\n\' +\n            \'[00:18:27.460][I]开始交易  C016:服务调用\\n\' +\n            \'[00:18:27.460][I]调用业务流程步骤Step1\\n\' +\n            \'[00:18:27.460][I]步骤 1 功能 服务开始\';\n        var result = [\"7.460][I]\",\"7.460][I]\",\"7.460][I]\",\"7.460][I]\"]\n        var newData = \'\';\n        var end = 0\n        if(result.length){\n            result.map((item, index) => {\n                end = dataExample.indexOf(result[index])\n                newData += dataExample.substring(0, end) + \'<span class=\"highlight\">\' + result[index] + \'</span>\'\n                dataExample = dataExample.substring(end + result[index].length)\n                if(index === (result.length - 1)){\n                    newData += dataExample\n                }\n            })\n        }\n        console.log(newData);\n        document.getElementById(\'test\').innerHTML = newData\n```', 20, 1, 13, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:39:13', '2022-12-29 13:39:17', 1);
INSERT INTO `blog_info` VALUES (62, '在v-html的html字符串中绑定事件', 'vue操作', '```html\n<div class=\"richText\" v-html=\"richTextContent\" @click=\"test\"></div>\n```\n```js\nexport default {\n        data(){\n            return {\n                richTextContent: \"<p class=\'testssss\' data-innervalue=\'sadsadsa\' data-value=\'{nasdlkashdashdkjsahdksd}\'><span style=\\\"font-size: 14px;\\\"></span>Some Wi‑Fi networks are open and you can simply connect for internet access. Other Wi‑Fi networks are secure and require you to enter a password. Contact the Wi-Fi network&#39;s owner for the password.</p><p>To search for and connect with available Wi-Fi networks:</p><ol class=\\\" list-paddingleft-2\\\"><li><p>Swipe down from the top of your screen to open <strong>quick settings</strong> and then:</p></li><ul class=\\\" list-paddingleft-2\\\"><li><p>Android 9: Touch &amp; hold <img src=\\\"https://help.motorola.com/hc/images/global/qs_wifi_on_90.png\\\"/>.</p></li><li><p>Android 8: Touch <strong>Wi Fi &gt; More settings</strong></p></li><li><p>Android 7: Touch <strong>Wi Fi</strong>.</p></li></ul><li><p>Turn Wi-Fi on <img src=\\\"https://help.motorola.com/hc/images/global/slider_on.png\\\"/>.</p></li><li><p>Touch the Wi-Fi network you want to connect to.</p></li><li><p>If the network is a secure one, enter the password.</p></li></ol><p>Make sure you enter the password correctly. Touch <strong>Show password</strong> to see what you’re typing.</p><p>When your phone is connected, <img src=\\\"https://help.motorola.com/hc/images/global/i_wifi_min.png\\\"/> appears in the status bar. If the connection is poor, <img src=\\\"https://help.motorola.com/hc/images/global/i_wifi_poor.png\\\"/> appears in the status bar.</p>\"\n            }\n        },\n        methods: {\n            test(event){\n                console.log(event.target.className) // testssss  \n                console.log(event.target.nodeName) // p\n                if (event.target.nodeName === \'p\' && event.target.className === \'testssss\') {\n                   // 获取触发事件对象的属性\n                   alert(\'a\')\n   }\n            }\n        }\n    }\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3490381478,1327095451&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:44:45', '2022-12-29 13:44:49', 1);
INSERT INTO `blog_info` VALUES (63, '获取时间', '获取时间', '- 获取本周第一天的日期\n```js\ngetWeekFirstDay() {\n        const now = new Date()\n        const weekFirstDay = new Date(now - (now.getDay() - 1) * 60 * 60 * 24 * 1000)\n        const M = weekFirstDay.getMonth() + 1\n        const Y = weekFirstDay.getFullYear()\n        return Y + \'-\' + (M > 10 ? M : \'0\' + M) + \'-\' + (weekFirstDay.getDate() > 10 ? weekFirstDay.getDate() : \'0\' + weekFirstDay.getDate())\n      }\n```\n- 获取本周的最后一天\n```js\ngetWeekLastDay() {\n        const now = new Date()\n        const weekFirstDay = new Date(now - (now.getDay() - 1) * 60 * 60 * 24 * 1000)\n        const weekLastDay = new Date((weekFirstDay / 1000 + 6 * 60 * 60 * 24) * 1000)\n        const M = weekLastDay.getMonth() + 1\n        const Y = weekLastDay.getFullYear()\n        return Y + \'-\' + (M > 10 ? M : \'0\' + M) + \'-\' + (weekLastDay.getDate() > 10 ? weekLastDay.getDate() : \'0\' + weekLastDay.getDate())\n      }\n```\n- 获取本月第一天\n```js\ngetMonthFirstDay() {\n        const now = new Date()\n        return new Date(now.getFullYear(), now.getMonth(), 1)\n      }\n```\n- 获取本月最后一天\n```js\ngetMonthLastDay() {\n        const now = new Date()\n        // 下个月的第一天\n        const nextMonthFirstDay = new Date(now.getFullYear(), now.getMonth() + 1, 1)\n        return new Date(nextMonthFirstDay - 1)\n      }\n```\n- 获取今年第一天\n```js\ngetYearFirstDay() {\n        return new Date(new Date().getFullYear() + \'-01-01 00:00:00\')\n      }\n```\n- 获取今年最后一天\n```js\ngetYearLastDay() {\n        return new Date(new Date().getFullYear() + \'-12-31 23:59:59\')\n      }\n```\n- 获取昨天\n```js\ngetYesterday(){\n        const oneDay = 1000 * 60 * 60 * 24\n        const now = new Date()\n        const yesterday = new Date(now - oneDay)\n        const M = now.getMonth() + 1\n        const Y = now.getFullYear()\n        return Y + \'-\' + (M > 10 ? M : \'0\' + M) + \'-\' + (yesterday.getDate() > 10 ? yesterday.getDate() : \'0\' + yesterday.getDate())\n      }\n```\n- 获取一个小时前\n```js\n getPreOneHour(){\n        return new Date().getTime() - 60 * 60 * 1000\n      }\n```\n- 获取24小时前\n```js\ngetPreDay(){\n        return new Date().getTime() - 24 * 60 * 60 * 1000\n      }\n```\n- 获取七天前\n```js\ngetPreWeek(){\n        return new Date().getTime() - 7 * 24 * 60 * 60 * 1000\n      }\n```\n- 获取上个月\n```js\n/**\n       * 获取上个月\n       * @param date 格式为yyyy-mm-dd的日期，如：2014-01-25\n       * @return {string}\n       */\ngetPreMouth(date){\n        var arr = date.split(\'-\');\n        var year = arr[0]; //获取当前日期的年份\n        var month = arr[1]; //获取当前日期的月份\n        var day = arr[2]; //获取当前日期的日\n        var days = new Date(year, month, 0);\n        days = days.getDate(); //获取当前日期中月的天数\n        var year2 = year;\n        var month2 = parseInt(month) - 1;\n        if (month2 === 0) {\n          year2 = parseInt(year2) - 1;\n          month2 = 12;\n        }\n        var day2 = day;\n        var days2 = new Date(year2, month2, 0);\n        days2 = days2.getDate();\n        if (day2 > days2) {\n          day2 = days2;\n        }\n        if (month2 < 10) {\n          month2 = \'0\' + month2;\n        }\n        return year2 + \'-\' + month2 + \'-\' + day2;\n      }\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3652603119,1002591341&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:50:57', '2022-12-29 13:51:01', 1);
INSERT INTO `blog_info` VALUES (64, '删除数组中特定的值', '数组操作', '```js\n/**\n巧妙使用数组中的push()、shift()方法\n将不与特定值相等的项移到数组最后存起来，再删除当前的第一项，经过arr.length次操作之后，只剩下存入数组后方的那些项\n*/\nfunction del(arr,num) {\n			var l=arr.length;\n		    for (var i = 0; i < l; i++) {\n			  	if (arr[0]!==num) { \n			  		arr.push(arr[0]);\n			  	}\n			  	arr.shift(arr[0]);\n		    }\n		    return arr;\n		}\n		var a=[3,2,3,445,3,3,3,1,3];\n		console.log(del(a,3));\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3713262463,3471908827&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:53:12', '2022-12-29 13:53:16', 1);
INSERT INTO `blog_info` VALUES (65, '匹配包含输入值的数组', '数组操作', '```html\n<div class=\"box\">\n        <input v-model=\"ipt\" @input=\"filterIpt\" />\n        <ul>\n            <li v-for=\"item in list\">{{item.text}}</li>\n    	</ul>\n    </div>\n```\n```js\nexport default{\n        data() {\n            return {\n            	list: [\n                    {\n                        text: \'source\'\n                    },\n                    {\n                        text: \'source_name\'\n                    },\n                    {\n                        text: \'sid\'\n                    },\n                    {\n                        text: \'content_id\'\n                    }\n                ],\n                \n                ipt: \'\',\n                timer: null,\n                saveList: []\n        	}\n        },\n        methods: {\n            gatData(){\n                this.$http({url}).then(rsp => {\n                    this.list = [\n                        {\n                            text: \'source\'\n                        },\n                        {\n                            text: \'source_name\'\n                        },\n                        {\n                            text: \'sid\'\n                        },\n                        {\n                            text: \'content_id\'\n                        }\n                    ]\n                    this.saveList = this.list\n                })\n            },\n            filterIpt(){\n                if(this.timer){\n                    clearInterval(this.timer)\n                }\n                let self = this\n                this.timer = setTimeout(function(){\n                    let arr = []\n                    if(self.ipt !== \'\'){\n                        arr = self.list.filter(item => {\n                            return item.text.indexOf(self.ipt) !== -1\n                        })\n                    }else{\n                        arr = self.saveList\n                    }\n                    self.list = arr\n                }, 500)\n            }\n        }\n    }\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/1.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:55:27', '2022-12-29 13:55:32', 1);
INSERT INTO `blog_info` VALUES (66, '点击字段，将字段对应的数据置顶', '数组操作', '```html\n<div id=\"app\">\n  <div class=\"field\">\n    <ul>\n      <li @click=\"change(key)\" v-for=\"(val, key, index) in fieldList\">{{val}}--{{key}}--{{index}}</li>\n    </ul>\n  </div>\n  {{fieldList.length}}\n  <ul>\n    <li v-for=\"(item, index) in arr\">{{index}}:{{item}}</li>\n  </ul>\n</div>\n```\n```js\nvar vm = new Vue({\n   el: \'#app\',\n   data(){\n     return {\n       arr: [\n         {\n           name: \'czl\',\n           age: 1,\n           edu: \'qq\'\n         },\n         {\n           name: \'hm\',\n           age: 2,\n           edu: \'ww\'\n         },\n         {\n           name: \'zxc\',\n           age: 3,\n           edu: \'ee\'\n         },\n         {\n           name: \'qw\',\n           age: 4,\n           edu: \'rr\'\n         },\n         {\n           name: \'dsd\',\n           age: 5,\n           edu: \'tt\'\n         }\n       ],\n       fieldList: {}\n     }\n   },\n   mounted(){\n      this.fieldList = this.arr[0]\n   },\n   methods: {\n     change(key){\n       var obj = {}\n       for (var o in this.fieldList){\n        if(o === key){\n          this.arr.map((item, index) => {\n            var oo = {}\n            oo[key] = this.arr[index][key]\n            this.arr[index] = Object.assign(oo, this.arr[index])\n          })\n        }\n      }\n       obj[key] = key\n       this.fieldList = Object.assign(obj, this.fieldList)\n     }\n   }\n })\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/2.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 13:57:55', '2022-12-29 13:57:59', 1);
INSERT INTO `blog_info` VALUES (67, 'vue中打开新的页签', 'vue操作', '```html\n<div class=\"target\" @click=\"ceshi\" ref=\"target\">测试</div>\n```\n```js\nceshi() {\n      let routeData = this.$router.resolve({\n        path: \"/preview\",\n        query: {\n          name: \"heihei\",\n          sex: \"女\"\n        }\n      });\n      window.open(routeData.href, \"_blank\");\n    }\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/3.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 14:00:30', '2022-12-29 14:00:33', 1);
INSERT INTO `blog_info` VALUES (68, 'vue路由守卫触发顺序', 'vue路由', '- 不同组件之间的路由跳转流程\n  1. 导航被触发(A => B)\n  2. 调用A组件内路由守卫`beforeRouteLeave`\n  3. 调用全局路由前置守卫`router.beforeEach`\n  4. 调用B路由独享守卫`beforeEnter`\n  5. 解析异步路由组件B\n  6. 调用B的组件内路由守卫`beforeRouteEnter`\n  7. 调用全局路由解析守卫`router.beforeResolve`\n  8. 导航被确认\n  9. 调用全局路由后置守卫`router.afterEach`\n  10. 渲染B组件DOM\n- 复用组件的路由跳转流程\n  1. 触发全局路由守卫`afterEach`\n  2. 更新DOM\n  3. 导航被触发(改变动态路由参数)\n  4. 调用全局路由前置守卫`router.beforeEach`\n  5. 调用复用组件的组件内路由守卫`beforeRouteUpdate`\n  6. 调用全局路由解析守卫`router.beforeResolve`\n  7. 导航被确认\n  8. 调用全局路由守卫`router.afterEach`\n  9. 更新DOM', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/4.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 14:08:45', '2022-12-29 14:08:51', 1);
INSERT INTO `blog_info` VALUES (69, '千分位数值格式化', 'js操作', '```js\nfunction formatNumber(num) { \n  if (isNaN(num)) { \n    throw new TypeError(\"num is not a number\"); \n  } \n  \n  var groups = (/([\\-\\+]?)(\\d*)(\\.\\d+)?/g).exec(\"\" + num), \n    mask = groups[1],            //符号位\n    integers = (groups[2] || \"\").split(\"\"), //整数部分\n    decimal = groups[3] || \"\",       //小数部分\n    remain = integers.length % 3; \n  \n  var temp = integers.reduce(function(previousValue, currentValue, index) { \n    if (index + 1 === remain || (index + 1 - remain) % 3 === 0) { \n      return previousValue + currentValue + \",\"; \n    } else { \n      return previousValue + currentValue; \n    } \n  }, \"\").replace(/\\,$/g, \"\"); \n  return mask + temp + decimal; \n}\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/3.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 14:10:15', '2022-12-29 14:10:18', 1);
INSERT INTO `blog_info` VALUES (70, 'input的compositionstart和compositionend事件(禁止非直接输入)', 'input输入相关', '- 在web开发中，我们通常需要对输入的内容进行校验，输入过程中会输入拼音，每次输入字母都会触发input事件，然而当中文输入完成之前，都属于非直接输入\n### 事件解释\n- compositionstart\n```\n是指中文输入法开始输入触发，每次输入开始仅执行一次，执行的开始是end事件结束了才会触发\n```\n  - compositionupdate\n```\n是指中文输入法在输入时触发，也就是可能得到huang这种内容，这里返回的内容是实时的。\n仅在start事件触发后触发，输入时实时触发\n```\n - compositionend\n```\n是指中文输入法输入完成时触发，这时得到的结果就是最终输入完成的结果，此事件仅执行一次。\n需要特别注意的是：该事件触发顺序在input事件之后，故而需要在此事件的处理逻辑里调用一次input里面的业务逻辑\n```', 20, 2, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/4.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-29 14:23:34', '2022-12-29 15:21:57', 1);
INSERT INTO `blog_info` VALUES (71, '使用window.performance分析web前端性能', 'web性能', '- 打开浏览器输入`window.performance.timing`\n![preformance.png](https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/preformance.png)\n- 返回了一个`performanceTiming`对象，包含了各种与浏览器性能有关的时间数据，提供浏览器处理网页各个阶段的耗时，它包含的页面性能属性如下：\n\n  | 属性                        | 含义                                                         |\n  | --------------------------- | ------------------------------------------------------------ |\n  | navigationStart             | 准备加载新页面的起始时间                                     |\n  | redirectStart               | 如果发生了HTTP重定向，并且从导航开始，中间的每次重定向，都和当前文档同域的话，就返回开始重定向的timing.fetchStart的值。其他情况，则返回0 |\n  | redirectEnd                 | 如果发生了HTTP重定向，并且从导航开始，中间的每次重定向，都和当前文档同域的话，就返回最后一次重定向，接收到最后一个字节数据后的那个时间，其他情况则返回0 |\n  | fetchStart                  | 如果一个新的资源获取被发起，则fetchStart必须返回用户代理开始检查其相关缓存的那个时间，其他情况则返回开始获取该资源的时间 |\n  | domainLookupStart           | 返回用户代理对当前文档所属域进行DNS查询开始的时间。如果此请求没有DNS查询过程，如长连接，资源cache，甚至是本地资源等。那个就返回fetchStart的值 |\n  | domainLookupEnd             | 返回用户代理对结束对当前文档所属域进行DNS查询的时间。如果此请求没有DNS查询过程，如长连接，资源cache，甚至是本地资源等。那么就返回fetchStart的值 |\n  | connectStart                | 返回用户代理向服务器请求文档，开始建立连接的那个时间。如果此连接是一个长连接，又或者直接从缓存中获取资源(即没有与服务器建立连接)。则返回domainLookupEnd的值 |\n  | (secureConnectionStart)     | 可选特性。用户代理如果没有对应的东西，就要把这个设置为undefined。如果有这个东西，并且是HTTPS协议，那么就要返回开始SSL握手的那个时间。如果不是HTTPS，那么就返回0 |\n  | connectEnd                  | 返回用户代理项服务器请求文档，简历连接成功后的那个时间，如果此连接是一个长连接，又或者直接从缓存中获取资源(即没有与服务器建立连接)。则返回domainLookupEnd的值 |\n  | responseEnd                 | 响应结束时间                                                 |\n  | domLoading                  | 返回用户代理把其文档的\"current document readiness\"设置为\"loading\"的时候 |\n  | domInteractive              | 返回用户代理把其文档的\"current document readiness\"设置为\"interactive\"的时候 |\n  | domConntentLoadedEventStart | 返回文档发生DOMContentLoaded事件的时间                       |\n  | domContentLoadedEventEnd    | 文档的DOMContentLoaded事件的结束时间                         |\n\n- 下图，能更加直观的展示这些数据的关系\n![20200717141446763.png](https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/20200717141446763.png)\n- 常用的页面性能数据如下\n  - `DNS查询消耗`、`TCP链接耗时`、`request请求耗时`、`解析DOM树耗时`、`白屏时间`、`domready时间`、`onload时间`等。而这些参数是通过上面的`performance.timing`各个属性的差值组成的，计算方法如下：\n  - DNS查询耗时：domainLookupEnd - domainLookuoStart\n  - TCP链接耗时：connectEnd - connectStart\n  - request请求耗时：responseEnd - responseStart\n  - 解析DOM树耗时：domComplete - domInteractive\n  - 白屏时间：responseStart - navigationStart\n  - domready时间：domContentLoadedEventEnd - navigationStart\n  - onload时间：loadEventEnd - navigationStart\n- `NavigationTiming`的目的是用于分析页面整体性能指标。如果要获取个别资源(如js、图片)的性能指标，就需要使用`ResourceTimingAPI`\n  - 页面资源加载`ResourceTiming`\n  - 这个主要用来获取单个静态资源(js、css、图片、音频视频等)从开始发出请求到获取响应之间各个阶段的Timing\n  - 打开浏览器输入`window.performance.getEntries()`\n![performance-getEntries.png](https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/performance-getEntries.png)\n - `window.performance.memory`：浏览器内存情况\n![performance-memory.png](https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/performance-memory.png)\n - jsHeapSizeLimit: 内存大小限制\n - totalJSHeapSize: 可使用内容\n - usedJSHeapSize: 已使用内容\n**注：** `usedJSHeapSize`表示所有被使用的js堆栈内容；`totalJSHeapSize`表示当前js堆栈内存总大小。这表示`usedJSHeapSize`不能大于`totalJSHeapSize`，否则可能出现内存泄漏\n#### 性能监测代码\n```js\n(function(w){\n	var resultObj = {};\n	//初始化相关\n	function TestTiming(timing){\n		var timerArr = [];\n		var dnsTimer = {key:\"DNS查询耗时\" , value:timing.domainLookupEnd - timing.domainLookupStart + \"ms\"};\n		var tcpTimer = {key:\"TCP链接耗时\" , value:timing.connectEnd - timing.connectStart + \"ms\"};\n		var requestTimer = {key:\"request请求耗时\" , value:timing.responseEnd - timing.responseStart + \"ms\"};\n		var domTimer = {key:\"解析dom树耗时\" , value:timing.domComplete - timing.domInteractive + \"ms\"};\n		var pageEmptyTimer = {key:\"白屏时间\" , value:timing.responseStart - timing.navigationStart + \"ms\"};\n		var domReadyTimer = {key:\"domready时间\" , value:timing.domContentLoadedEventEnd - timing.navigationStart + \"ms\"};\n		var onloadTimer = {key:\"onload时间\" , value:timing.loadEventEnd - timing.navigationStart + \"ms\"};\n\n		timerArr = timerArr.concat(dnsTimer, tcpTimer, requestTimer, domTimer, pageEmptyTimer, domReadyTimer, onloadTimer);\n		return timerArr;\n	}\n	//请求的各种资源（js,图片，样式等）\n	function TestResource(resourcesObj){\n		var resourceArr = [];\n		var len = resourcesObj.length;\n		for(var i = len - 1;i >0;i--){\n			var temp = {};\n			var cur = resourcesObj[i];\n			temp.key = cur.name;\n			temp.resValue = cur.responseEnd - cur.requestStart + \"ms\";\n			temp.conValue = cur.connectEnd - cur.connectStart + \"ms\";\n			resourceArr.push(temp);\n		}\n		return resourceArr;\n	}\n	//页面的加载方式\n	function pageLoadMethod(type){\n		var arr = [];\n		var loadMethod = {};\n		loadMethod.name = \"进入页面的方式\";\n		var str = \"\";\n		switch(type){\n			case 0:\n				str = \'点击链接、地址栏输入、表单提交、脚本操作等方式加载\';\n				break;\n			case 1:\n				str = \'通过“重新加载”按钮或者location.reload()方法加载\';\n				break;\n			case 2:\n				str = \'网页通过“前进”或“后退”按钮加载\';\n				break;\n			default:\n				str = \'任何其他来源的加载\';\n				break;\n		}\n		loadMethod.value = str;\n		arr.push(loadMethod);\n		return arr;\n	}\n	//输出性能数据\n	function outPutData(perObj){\n		var timerArr = TestTiming(perObj.timing);\n		var resourcesArr = TestResource(perObj.getEntries());\n		var loadMethodArr = pageLoadMethod(perObj.navigation.type);\n		console.log(\"-------页面初始化------------------------\");\n		console.table(timerArr);\n		console.log(\"-------页面请求------------------------\");\n		console.table(resourcesArr);\n		console.log(\"-------页面加载方式------------------------\");\n		console.table(loadMethodArr);\n	}\n\n	w.perTestResult = outPutData;\n})(window);\n```', 20, 23, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=202585375,853911840&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, 1, 1, 1, 1, '2022-12-29 15:21:47', '2022-12-29 16:16:00', 1);
INSERT INTO `blog_info` VALUES (72, 'vue-admin-element找不到对应组件无法进入页面', 'vue相关', '- 解决方案：将后台返回的路由字符串转为组件对象时，可以先判断路由字符串是否能与相关的vue文件对应，如果匹配则根据路由字符串加载。若不匹配，则加载404组件\n```js\n// 获取views目录下的所有.vue文件路径\nconst viewFile = require.context(\'./views\', true, /\\.vue$/)\nlet viewPath = viewFile.keys().map(modulePath => {\n    // modulePath = \'./dashboard/index.vue\'\n  return modulePath.slice(2).split(\'.\')[0]\n})\n// 遍历后台传来的路由字符串，转换为组件对象\nfunction filterAsyncRouter(asyncRouterMap) {\n  return asyncRouterMap.filter(route => {\n    if (route.component) {\n      if (route.component === \'Layout\') {\n        route.component = Layout\n      } else {\n        if(viewPath.includes(route.component)){\n          route.component = _import(route.component)\n        }else{\n          route.component = () => import(\'@/views/error-page/404\')\n        }\n      }\n    }\n    if (route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children)\n    }\n    return true\n  })\n}\n```', 20, 11, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=267767918,2886226332&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 15:25:56', '2022-12-29 16:39:48', 1);
INSERT INTO `blog_info` VALUES (73, '格式化字段为SQL或者json', 'js相关', '```html\n<div class=\"text\">\n    [10/19/20 11:06:19:363 CST] 000000c5 SystemOut     O [2020-10-19T11:06:19,360] [DEBUG] [WebContainer : 0] com.ibatis.common.logging.slf4j.Slf4jImpl.debug(Slf4jImpl.java:33)  []\n    {conn-100033} Preparing Statement:     insert into its_syslogdsfdsf     (      inputuserid1,      operatetype,      operatetypedesc,      moudlecode,      moudlename,      busstype,      busstypedesc,      busscode,      otherdesc,      requesturl,      requestip,      operateresult,      errormessage,      Uids,      serverIp)   values     (      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?)\n    Parameters: [1012, 23, 进入影像维护审批页面, T52, 票据交易系统, 400, 影像维护, null, null, /ifinance-icpec/paper/billimage/toApproval.web, 10.129.145.143, 1, null, ae0726ff-b4ab-4dd1-8b56-8389db87fc1e, 10.212.165.144]\n</div>\n<button id=\"copyContent\">拷贝内容</button>\n<button id=\"copySql\">拷贝SQL</button>\n<button id=\"execSql\">执行SQL</button>\n```\n```js\n	var textHtml = $(\".text\").html()\n    var textArr = textHtml.toLowerCase().split(\'insert into\')\n    var arr = []\n    textArr.slice(1).map((item ,index) => {\n        var statement = item.toLowerCase().split(\'parameters\')[0]\n        var parameter = item.toLowerCase().split(\'parameters\')[1]\n        var leftArr = []\n        var rightArr = []\n        let statementFlag = false\n        for(var i in statement){\n            if(statement[i] === \"(\"){\n                if(!leftArr.length){\n                    leftArr.push(i)\n                }\n            }else if(statement[i] === \")\"){\n                if(!rightArr.length){\n                    rightArr.push(i)\n                }\n            }else{\n                statementFlag = true\n            }\n        }\n        var parLeftArr = []\n        var parRightArr = []\n        for (var k in parameter){\n            if(parameter[k] === \'[\'){\n                if(!parLeftArr.length){\n                    parLeftArr.push(k)\n                }\n            }else if(parameter[k] === \']\'){\n                if(!parRightArr.length){\n                    parRightArr.push(k)\n                }\n            }\n        }\n        var keyStr = statement.substring(parseInt(leftArr[0]) + 1, rightArr[0])\n\n        var keyArr = keyStr.replace(/\\ +/g,\"\").replace(/[\\r\\n]/g,\"\").split(\",\")// 去空格、回车\n\n        var valueStr = parameter.substring(parseInt(parLeftArr[0]) + 1, parRightArr[0])\n\n        var valueArr = valueStr.replace(/\\ +/g,\"\").replace(/[\\r\\n]/g,\"\").split(\",\") // 去空格、回车\n\n        var genObj = getNewArr(keyArr, valueArr)\n        let listStr = \'\'\n        let contentStr = \'\'\n        let insertSqlStr;\n        let selectSqlStr\n        let sqlKey = \'\'\n        let sqlValue = \'\'\n        for (var j in genObj){\n            listStr += `\n             <div class=\"list-item\">\n                <div class=\"key\">${j}</div>\n                <div class=\"value\">${genObj[j]}</div>\n            </div>\n        `\n            contentStr += `${j}: ${genObj[j]}\\n`\n            sqlKey += `${j}, `\n            sqlValue += `\'${genObj[j]}\', `\n        }\n        var tableName = statement.slice(0, parseInt(statement.toLowerCase().indexOf(\'(\'))).trim()\n        insertSqlStr = \'insert into \'+ tableName + \'(\' + sqlKey.slice(0, -2) + \') values (\' + sqlValue.slice(0, -2) + \')\'\n        selectSqlStr = \'select \' + sqlKey.slice(0, -2) + \' from \' + tableName + \' where \' + generatorKeyAndValue(keyArr, valueArr).join(\' \').slice(0, -4)\n        arr.push({\n            listStr,\n            contentStr,\n            insertSqlStr,\n            selectSqlStr\n        })\n    })\n	console.log(arr);\n	function getNewArr(keyArr, valueArr){\n        var obj = {}\n        keyArr.map((item, index) => {\n            obj[keyArr[index]] = valueArr[index]\n        })\n        return obj\n    }\n    function generatorKeyAndValue(keyArr, valueArr){\n        return keyArr.map((item, index) => {\n            return item + \'=\\\'\'+ valueArr[index] + \'\\\' and\'\n        })\n    }\n	$(\"#copyContent\").on(\"click\", function(){\n        $(\"#contentArea\").val(arr.map(item => item.contentStr).join(\'\\n\'))\n        $(\"#contentArea\").select()\n        document.execCommand(\"copy\")\n    })\n    $(\"#copySql\").on(\"click\", function () {\n        $(\"#contentArea\").val(arr.map(item => item.insertSqlStr).join(\'\\n\\n\'))\n        $(\"#contentArea\").select()\n        document.execCommand(\"copy\")\n    })\n    $(\"#execSql\").on(\"click\", function () {\n        console.log(arr[0].selectSqlStr);\n    })\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=202585375,853911840&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:42:22', '2022-12-29 16:42:49', 1);
INSERT INTO `blog_info` VALUES (74, 'css字体抗锯齿渲染', 'css字体抗锯齿渲染', '```css\n.font{\n    -webkit-font-smoothing: antialiased; /* 抗锯齿很好 none: 对低像素的文本比较好  subpixel-antialiased: 默认值 */\n}\n```', 20, 1, 12, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=267767918,2886226332&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:44:29', '2022-12-29 16:44:33', 1);
INSERT INTO `blog_info` VALUES (75, 'addEventListener参数说明', 'addEventListener参数说明', '```js\n/**\n* event: 事件名称，如click\n* handler：指定事件触发时执行的函数，可以传入事件参数\n* 第三个参数：可选，Boolean值，指定事件是否在捕获或冒泡阶段执行\n*  默认值：false\n*      false：在冒泡阶段执行指定事件\n*      true： 在捕获阶段执行事件\n*/\nelement.addEventListener(event, handler, false)\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=520548276,2227732353&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:45:46', '2022-12-29 16:45:55', 1);
INSERT INTO `blog_info` VALUES (76, '取出字符串中的json数据，没有则返回null', 'js相关', '```html\n<div id=\"test\">\n  1\n  {\"a\": [1], \"c\": \"b\"}\n  2\n</div>\n```\n```js\nfunction getJson(jsonStr) {\n    var stringStack = new Stack();\n    var indexList = []; // 存放{}和[]的索引值 最后两个为开始{和结束}，根据索引值对应的元素位置截取数据\n    var jsonList = [];\n    for (var i = 0; i < jsonStr.length; i++) {\n      if (jsonStr.charAt(i) === \'{\' || jsonStr.charAt(i) === \'[\') {\n        stringStack.push(new JsonStack(i, jsonStr.charAt(i)));\n      } else if (jsonStr.charAt(i) === \'}\' || jsonStr.charAt(i) === \']\') {\n        if (stringStack.dataStore.length !== 0) {\n          var js = stringStack.peek();\n          if (jsonStr.charAt(i) === \'}\' && js.char === \'{\') {\n            js = stringStack.pop();\n          } else if (jsonStr.charAt(i) === \']\' && js.char === \'[\') {\n            js = stringStack.pop();\n          }\n          indexList.push(js.index);\n          indexList.push(i);\n        }\n      }\n      if (stringStack.dataStore.length === 0 && indexList.length > 0) {\n        var tempStr = getJsonStr(indexList, jsonStr);\n        if (!(tempStr == null || tempStr.length === 0)) {\n          jsonList.push(tempStr);\n        }\n        indexList.splice(0, indexList.length);\n        ;\n      }\n    }\n\n    if (indexList != null && indexList.length > 0) {\n      var tempStr = getJsonStr(indexList, jsonStr);\n      if (!(tempStr == null || tempStr.length === 0)) {\n        jsonList.push(tempStr);\n      }\n    }\n    if (jsonList != null && jsonList.length > 0) {\n      return jsonList[0];\n    } else {\n      return null;\n    }\n  }\n\n  function getJsonStr(indexList, str) {\n    var temp = \"\";\n    for (var i = indexList.length - 1; i >= 0; i = i - 2) {\n      try {\n        temp = str.substring(indexList[i - 1], indexList[i] + 1);\n        JSON.parse(temp);\n        return temp;\n      } catch (e) {\n        continue;\n      }\n    }\n    return null;\n  }\n\n  function JsonStack(index, char) {\n\n    this.index = index;\n\n    this.char = char;\n\n  }\n\n  function Stack() {\n    this.dataStore = [];//保存栈内元素，初始化为一个空数组\n    this.top = 0;//栈顶位置，初始化为0\n    this.push = push;//入栈\n    this.pop = pop;//出栈\n    this.peek = peek;//查看栈顶元素\n    // this.clear = clear;//清空栈\n    this.length = length;//栈内存放元素的个数\n  }\n\n  function push(element) {\n    this.dataStore[this.top++] = element;\n  }\n\n  function pop() {\n    return this.dataStore[--this.top];\n  }\n\n  function peek() {\n    return this.dataStore[this.top - 1];\n  }\n\n  function length() {\n    return this.top;\n  }\n\n\nconsole.log(getJson(document.getElementById(\'test\').innerText));\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=529657752,2140000372&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:48:06', '2022-12-29 16:48:11', 1);
INSERT INTO `blog_info` VALUES (77, '判断字符串是否可转为json数据', 'js操作', '```js\nfunction isJsonString(str) {\n  try {\n    if (typeof JSON.parse(str) == \"object\") {\n      return true;\n    }\n  } catch(e) {\n  }\n  return false;\n}\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:49:06', '2022-12-29 16:49:11', 1);
INSERT INTO `blog_info` VALUES (78, '取出字符串中的xml数据，没有则返回为空', 'js操作', '```js\nlet xml = \'qwwqwqwq<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE foo SYSTEM \"Foo.dtd\"><a><b>bbb</b><c/><d><soapenv:Envelope xmlns:soapenv=\"http://xxx\" xmlns:xsd=\"http://yyy\" xmlns:xsi=\"http://zzz\"></soapenv></d><e><![CDATA[ <z></z> ]]></e><f><g></g></f></a>wwwwww\'\nconsole.log(getXml(xml));\nfunction getXml(text) {\n    let ar = text.replace(/>\\s{0,}</g, \"><\")\n        .replace(/</g, \"~::~<\")\n        .replace(/\\s*xmlns\\:/g, \"~::~xmlns:\")\n        .replace(/\\s*xmlns\\=/g, \"~::~xmlns=\")\n        .split(\'~::~\'),\n      len = ar.length,\n      inComment = false,\n      deep = 0,\n      str = \'\',\n      ix = 0,\n      shift = createShiftArr(4);\n    for (ix = 0; ix < len; ix++) {\n      // start comment or <![CDATA[...]]> or <!DOCTYPE\n      if (ar[ix].search(/<!/) > -1) {\n        str += shift[deep] + ar[ix]\n        inComment = true\n        // end comment  or <![CDATA[...]]>\n        if (ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1) {\n          inComment = false\n        }\n      } else\n      //  end comment  or <![CDATA[...]]>\n      if (ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) {\n        str += ar[ix]\n        inComment = false\n      } else\n      // <elm></elm>\n      if (/^<\\w/.exec(ar[ix - 1]) && /^<\\/\\w/.exec(ar[ix]) &&\n        /^<[\\w:\\-\\.\\,]+/.exec(ar[ix - 1])[0] === /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace(\'/\', \'\')) {\n        str += ar[ix]\n        if (!inComment) deep--\n      } else\n      // <elm>\n      if (ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) === -1 && ar[ix].search(/\\/>/) === -1) {\n        str = !inComment ? str += shift[deep++] + ar[ix] : str += ar[ix]\n      } else\n      // <elm>...</elm>\n      if (ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\n        str = !inComment ? str += shift[deep] + ar[ix] : str += ar[ix]\n      } else\n      // </elm>\n      if (ar[ix].search(/<\\//) > -1) {\n        if(ix === len - 1){\n          let index = ar[ix].indexOf(\'>\')\n          str = !inComment ? str += shift[--deep] + ar[ix].substring(0, index + 1) : str += ar[ix].slice(0, index + 1)\n        }else{\n          str = !inComment ? str += shift[--deep] + ar[ix] : str += ar[ix]\n        }\n      } else\n      // <elm/>\n      if (ar[ix].search(/\\/>/) > -1) {\n        str = !inComment ? str += shift[deep] + ar[ix] : str += ar[ix]\n      } else\n      // <? xml ... ?\n      if (ar[ix].search(/<\\?/) > -1) {\n        str += shift[deep] + ar[ix]\n      } else\n      // xmlns\n      if (ar[ix].search(/xmlns\\:/) > -1 || ar[ix].search(/xmlns\\=/) > -1) {\n        str += shift[deep] + ar[ix]\n      } else {\n        // str += ar[ix]\n        console.log(\'不符合\');\n      }\n    }\n    return (str[0] === \'\\n\') ? str.slice(1) : str\n  }\nfunction createShiftArr(step) {\n    let space = \'    \'\n    if (isNaN(parseInt(step))) {\n      // step是字符串\n      space = step\n    } else {\n      // step是数字\n      switch (step) {\n        case 1:\n          space = \' \';\n          break\n        case 2:\n          space = \'  \';\n          break\n        case 3:\n          space = \'   \';\n          break\n        case 4:\n          space = \'    \';\n          break\n        case 5:\n          space = \'     \';\n          break\n        case 6:\n          space = \'      \';\n          break\n        case 7:\n          space = \'       \';\n          break\n        case 8:\n          space = \'        \';\n          break\n        case 9:\n          space = \'         \';\n          break\n        case 10:\n          space = \'          \';\n          break\n      }\n    }\n    let shift = [\'\\n\'] // shifts的数组\n    for (let i = 0; i < 100; i++) {\n      shift.push(shift[i] + space)\n    }\n    return shift\n  }\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:50:29', '2022-12-29 16:50:39', 1);
INSERT INTO `blog_info` VALUES (79, '点击v-html里面的图片进行预览', '图片相关', ' - 安装`npm install v-viewer`\n - 引入 `import \'viewerjs/dist/viewer.css\'`\n - `import Viewer from \'v-viewer\'`\n - `Vue.use(Viewer)`\n ```vue\n<viewer :trigger=\"data\">\n    <div class=\"info-content\" v-html=\"data.info\"></div>\n</viewer>\n\n<script>\n    const img = require(\'./login.png\')\n	export default {\n        data(){\n            return {\n                data: [\n                    {info: `<img src=\"${img}\" alt=\"\">`}\n                ]\n            }\n        }\n    }\n</script>\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 16:54:48', '2022-12-29 16:54:55', 1);
INSERT INTO `blog_info` VALUES (80, 'css动画和js动画的区别', 'css相关', ' - js动画(逐帧动画)\n   - 首先，js动画是逐帧动画，是在时间帧上逐帧绘制帧内容。由于是一帧一帧的话，所以它的可操作性很高，几乎可以完成任何你想要的动画形式。但由于逐帧动画的帧顺序内容不一样，会增加制作负担，且资源占有比较大。但优势也很明显：因为它类似于电影播放模式，但适合于表演很细腻的动画，如3D效果，任务或动画急剧转身等效果，但如果帧率过低的话，很可能会出现帧与帧之间的过渡不自然、不连贯。\n   - js是单线程的脚本语言，当js在浏览器主线程运行时，主线程还有其他需要运行的js脚本、样式、计算、布局、交互等一系列任务，对其干扰线程可能出现阻塞，造成丢帧的情况。\n   - 其次，js在做动画的时候，其复杂度是高于css3的，需要考虑一些计算，操作等方便问题。\n   - 但正是由于js对动画的操作复杂度比较高，能对动画有一个比较好的控制。如开始、暂停、回放、终止、取帧等，可以很精确的做到。因此js可以通过操作DOM和BOM来做一些炫酷的动态效果以及爆炸特效，且兼容性比较好。\n- css3动画(补间动画)\n  - 制作方法简单方便，只需确定第一帧和最后一帧的关键位置即可。两个关键帧之间，帧的内容有Composite线程自动生成，不需要认为处理。当然也可以多次添加关键帧的位置。\n  - 因为只设置几个关键帧的位置，所以在进行动画控制的时候是比较弱的，不能够在半路暂停动画，或者在动画过程中对其进行一些操作等。\n  - css3在实现一些简单的滑动、翻转等特效的时候会很方便，但想要做到一些酷炫的效果的时候，其操作往往可能会比js操作有更多的冗余。\n  - css在做动画的时候，浏览器可以对其进行一些优化，会比js更少的占用CPU资源，但是效果足够流畅。', 20, 3, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1987026386,2214862957&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:14:44', '2022-12-29 17:15:11', 1);
INSERT INTO `blog_info` VALUES (81, 'props传值强校验validator', 'props传值强校验validator', '- 父组件通过props给子组件传值，如果需要做一些强校验则可以使用`validator`\n- 如父组件传入一个effect参数，规定只能传入dark、light、plagin其中一个，可以这样写：\n```js\nprops: {\n	effect: {\n		type: String,\n		default: \'light\',\n		validator(val){\n			return [\'dark\', \'light\', \'plain\'].indexOf(val) !== -1\n		}\n	}\n}\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1987026386,2214862957&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:20:21', '2022-12-29 17:20:28', 1);
INSERT INTO `blog_info` VALUES (82, '将毫秒数转为日时分秒', 'js操作', '```js\nfunction formatDuring(mss) {\n  var days = parseInt(mss / (1000 * 60 * 60 * 24));\n  var hours = parseInt((mss % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  var minutes = parseInt((mss % (1000 * 60 * 60)) / (1000 * 60));\n  var seconds = (mss % (1000 * 60)) / 1000;\n  return days + \" 天 \" + hours + \" 时 \" + minutes + \" 分 \" + seconds + \" 秒 \";\n}\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=1987026386,2214862957&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:22:34', '2022-12-29 17:22:38', 1);
INSERT INTO `blog_info` VALUES (83, '闭包', 'js相关', '- 在js里面函数内部是可以访问函数外部变量的，但是需要外部访问函数内部变量的时候，就需要使用到闭包。\n- 当一个函数执行完毕后，返回一个对象或函数，返回的这个函数或对象里面引用了局部变量信息，也就是说局部变量信息不会消失，会长时间的存在于内存中的机制，就是闭包。\n  - 特性\n  :::tip\n   - 函数嵌套函数\n   - 函数内部可以引用外部的参数和变量\n   - 参数和变量不会被垃圾回收机制回收\n  :::\n  - 优点\n  :::tip\n   - 变量长期驻扎在内存中，可以重复使用变量\n   - 避免全局变量的污染\n   - 私有成员的存在\n  :::\n  - 缺点\n  :::warning\n   - 常驻内存，增大内存的使用量\n   - 使用不当会造成内存泄漏\n  :::', 20, 1, 11, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:36:22', '2022-12-29 17:36:26', 1);
INSERT INTO `blog_info` VALUES (84, '将字符串保存为文本', 'js操作', '```js\nfunction fakeClick(obj) {\n    var ev = document.createEvent(\"MouseEvents\");\n    ev.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    obj.dispatchEvent(ev);\n  }\n  function exportRaw(name, data) {\n    var urlObject = window.URL || window.webkitURL || window;\n    var export_blob = new Blob([data]);\n    var save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n    save_link.href = urlObject.createObjectURL(export_blob);\n    save_link.download = name;\n    fakeClick(save_link);\n  }\n\n  exportRaw(\'filename.txt\', \"要保存的字符串\")\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=2930719993,2577592180&fm=253&fmt=auto&app=138&f=PNG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:39:25', '2022-12-29 17:39:29', 1);
INSERT INTO `blog_info` VALUES (85, 'iframe父页面向子页面传值', 'js操作', '- 父页面\n```vue\n<template>\n	<div>\n        <button @click=\"sendArg\">传参</button>\n        <iframe id=\"iframe\" width=\"100%\"\n                height=\"480px\" name=\"son\" class=\"box\" src=\"http://localhost/hk/liveCarema/cn/demo.html\" frameborder=\"0\"></iframe>\n    </div>\n</template>\n<script>\n	methods: {\n        sendArg(){\n                document.getElementById(\'iframe\').contentWindow.postMessage({\n                    equipmentId: \'hm243695czl\'\n                }, \'*\')\n            	/**** 或者下面这样(ts写法) start *****/\n                const iframe = document.getElementById(\'iframe\');\n                const iWindow = (iframe as HTMLIFrameElement).contentWindow;\n                iWindow.postMessage({\n                  equipmentId: \'hm243695czl\'\n                }, \'*\');\n            	/**** end *****/\n            }\n    }\n</script>\n```\n- 子页面\n```js\nwindow.addEventListener(\'message\', function(e){\n        console.log(e.data);\n    })\n```\n', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3194704420,4085265848&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:42:32', '2022-12-29 17:42:37', 1);
INSERT INTO `blog_info` VALUES (86, '剑气加载动画', 'css相关', '```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <style>\n        body{\n            background: #000;\n        }\n        .sword {\n            position: relative;\n            margin: 200px auto;\n            width: 64px;\n            height: 64px;\n            border-radius: 50%;\n        }\n        .sword span{\n            position: absolute;\n            box-sizing: border-box;\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n        }\n        .sword :first-child{\n            left: 0%;\n            top: 0%;\n            border-bottom: 3px solid #EFEFFA;\n            animation: sword-one 1s linear infinite;\n        }\n        .sword :nth-child(2){\n            right: 0%;\n            top: 0%;\n            animation: sword-two 1s linear infinite;\n            border-right: 3px solid #EFEFFA;\n        }\n\n        .sword :last-child{\n            right: 0%;\n            bottom: 0%;\n            animation: sword-three 1s linear infinite;\n            border-top: 3px solid #EFEFFA;\n        }\n        @keyframes sword-one {\n            0% {\n                transform: rotateX(35deg) rotateY(-45deg) rotateZ(0deg);\n            }\n            100% {\n                transform: rotateX(35deg) rotateY(-45deg) rotateZ(360deg);\n            }\n        }\n        @keyframes sword-two {\n            0% {\n                transform: rotateX(50deg) rotateY(10deg) rotateZ(0deg);\n            }\n            100% {\n                transform: rotateX(50deg) rotateY(10deg) rotateZ(360deg);\n            }\n        }\n\n        @keyframes sword-three {\n            0% {\n                transform: rotateX(35deg) rotateY(55deg) rotateZ(0deg);\n            }\n            100% {\n                transform: rotateX(35deg) rotateY(55deg) rotateZ(360deg);\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"sword\">\n    <span></span>\n    <span></span>\n    <span></span>\n</div>\n</body>\n</html>\n\n```', 20, 1, 12, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3441609423,2220916635&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:43:36', '2022-12-29 17:43:40', 1);
INSERT INTO `blog_info` VALUES (87, 'vue项目打包取出console.log', 'vue相关', '在`vue.config.js`中：\n```js\nchainWebpack(config) {\n    config.optimization.minimizer(\'terser\').tap((args) => {\n      args[0].terserOptions.compress.drop_console = true\n      return args\n    })\n}\n```', 20, 1, 7, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3490381478,1327095451&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:44:44', '2022-12-29 17:44:47', 1);
INSERT INTO `blog_info` VALUES (88, 'canvas将图片转为点阵图', 'js相关', '```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    <canvas id=\"canvas\"></canvas>\n</body>\n<script>\n    var canvas = document.getElementById(\"canvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    var image = new Image();\n    image.src = \"dragon.webp\";\n    image.onload = function(){\n        canvas.width = image.width;\n        canvas.height = image.height;\n\n        ctx.drawImage(image,0,0);\n        var imageData = ctx.getImageData(0,0,image.width,image.height).data;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0,0,image.width,image.height);\n\n        var gap = 6;\n\n        for (var h = 0; h < image.height; h+=gap) {\n            for(var w = 0; w < image.width; w+=gap){\n                var position = (image.width * h + w) * 4;\n                var r = imageData[position], g = imageData[position + 1], b = imageData[position + 2];\n\n                if(r+g+b==0){\n                    ctx.fillStyle = \"#000\";\n                    ctx.fillRect(w,h,4,4);\n                }\n            }\n        }\n    };\n</script>\n</html>\n\n```', 20, 1, 10, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3652603119,1002591341&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-29 17:45:40', '2022-12-29 17:45:43', 1);
INSERT INTO `blog_info` VALUES (89, 'react扩展', 'react相关', '- setState\n  - setState更新状态的两种写法\n```js\nsetState(stateChange, [callback]) // 对象式的setState\n/**\n 1.stateChange为状态改变对象(该对象可以体现出状态的改变)\n 2. callback是可选的回调函数，它在状态更新完毕、界面也更新后(render调用后)才被调用\n*/\nsetState(updater, [callback]) // 函数式的setState\n/**\n 1. updater是返回stateChange对象的函数\n 2. updater可以接收到state和props\n 3. callback是可选的回调函数，它在状态更新、界面也更新后(render调用后)才被调用\n*/\n/**\n 总结：\n  1. 对象式的setState是函数式的setState的简写方式(语法糖)\n  2. 使用原则：\n    a. 新状态不依赖于原状态 ==> 使用对象方式\n    b. 新状态依赖于原状态 ==> 使用函数方式\n    c. 如果需要在setState()执行后获取最新的状态数据，要在第二个(callback)函数中获取\n*/\n```\n- lazyload\n  - 路由组件的lazyload\n```js\n  // 1、通过React的lazy函数配合import()函数动态加载路由组件 ====》路由组件代码会被分开打包\nconst Login = lazy(() => import(\'@/pages/login\'));\n```\n```html\n<!-- 2、通过<Suspense>指定在加载得到路由打包文件前显示一个自定义loading界面 -->\n<Suspense fallback={<h1>loading...</h1>}>\n	<Switch>\n    	<Route path=\"/xxx\" component={Xxx} />\n        <Redirect to=\"/login\" />\n    </Switch>\n</Suspense>\n```\n- Hooks\n  - ReactHook/Hook是什么\n```\n1、Hook是React 16.8.0版本增加的新特性、新语法\n2、可以让你再函数组件中使用state以及其他的React特性\n```\n -  三个常用的Hook\n```\n1、State Hook： React.useState()\n2、Effect Hook： React.useEffect()\n3、Ref Hook： React.useRef()\n```\n- State Hook\n```\n1、State Hook让函数组件也可以有state状态，并进行状态数据的读写操作\n2、语法： const [xxx, setXxx] = React.useState(\'hm243695czl\')\n3、useState()说明：\n	参数：第一次初始化指定的值在内部做缓存\n	返回值：包含两个元素的数组，第一个是内部当前状态值，第二个是更新状态值的函数\n4、setXxx()的两种写法：\n		setXxx(newValue)：参数是非函数值，直接指定新的状态值，内部用其覆盖原来的状态值\n		setXxx(value => newValue)：蚕食是函数，接收原本的状态值，返回新的状态值，内部用其覆盖原来的状态值\n```\n- Effect Hook\n```\n1、Effect Hook 可以让你在函数组件中执行副作用操作(用于模拟类组件中的生命周期钩子)\n2、React中的副作用操作：\n	发Ajax请求获取数据\n	设置订阅、启动定时器\n	手动改动真实DOM\n3、语法和说明：\n	useEffect(() => {\n		// 在此可以执行任何带副作用操作\n		return () => { // 在组件卸载前执行\n			// 在此做一些收尾工作，如清除定时器、取消订阅等\n		} \n	}, [stateValue]) // 如果指定的是[]，回调函数只会在第一次render()后执行\n4、可以把useEffect Hook 看做如下三个函数的组件\n	componentDidMount()\n	componentDidUpdate()\n	componentWillUnmount()\n```\n- Ref Hook\n```\n1、Ref Hook可以在函数组件中存储、查找组件内的标签或任意其他数据\n2、语法：const refContainer = useRef()\n3、作用：保存标签对象，功能与React.createRef()一样\n```\n- Fragment\n```\n<Fragment></Fragment>\n<></>\n\n\n作用： 可以不用必须有一个真实的DOM根标签\n```\n- Context：一种组件间的通信方式，常用于【祖组件】与【后代组件】间的通信\n```\n1. 创建Context容器兑现\n  const XxxContext = React.createContext();\n2. 渲染子组件时，外面包裹XxxContext.Provider，通过value属性给后代组件传递数据\n  <xxxContext.Provider value={数据}>\n  </xxxContext.Provider>\n3. 后代组件读取数据\n  第一种方式：仅适用于类组件\n  static contextType = xxxContext // 声明接收context\n  this.context // 读取context中的value数据\n\n  第二种方式：函数组件与类组件都可以\n  <xxxContext.Consumer>\n  {\n    value => ( // value就是context中的value数据\n	// 要显示的内容\n    )\n  }\n  <xxxContext.Consumer>\n```\n**注意：** `在应用开发中一般不用context，一般都用于封装react插件`\n- 组件优化\n  - Component的两个问题\n    - 只要执行setState()，即使不改变数据状态，组件也会重新render() ==> 效率低\n    - 只要当前组件重新render()， 就会自动渲染子组件，纵使子组件没有用到父组件的任何数据 ==> 效率低\n  - 效率高的做法\n    - 只有当组件的state或props数据发生改变时才重新render()\n  - 原因\n    - Component中的shouldComponentUpdate()总是返回true\n  - 解决\n```\n方法1：\n   重写shouldComponentUpdate()方法\n   比较新旧state或props数据，如果数据有变化才返回true，没有变化则返回false\n方法2：\n   使用PureComponent\n   PureComponent重写了shouldComponentUpdate()，只有state或props数据有变化才返回true\n   注意：\n      只是进行state和props数据的签比较，如果只是数据对象内部数据变了，返回false\n      不要直接修改state数据，而是要产生新数据\n项目中一般使用PureComponent来优化\n```\n', 20, 4, 8, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221229/u=3713262463,3471908827&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-30 10:04:34', '2022-12-30 09:25:11', 1);
INSERT INTO `blog_info` VALUES (90, 'css中var()和:root', 'css相关', '- var()\n  - var()函数可以替代元素中任何属性中的值的任何部分\n- :root\n  - :root是一个伪类，表示文档根元素，非IE及IE8及以上浏览器都支持，在:root中声明相当于全局属性，只要当前页面引用了:root segment所在文件，都可以使用var()来引用\n```css\n:root{\n    --main-bg: #f00;\n}\n\nbody{\n    backgournd-color: var(--main-bg);\n}\n```', 20, 6, 12, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221230/u=2052860268,2113493852&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-30 09:29:39', '2022-12-30 10:02:04', 1);
INSERT INTO `blog_info` VALUES (91, 'elasticsearch记录', 'elasticsearch', '- 查看所有节点 `localhost:9200/_cat/nodes`\n- 查看健康状况 `localhost:9200/_cat/health`\n- 查看主节点 `localhost:9200/_cat/master`\n- 查看所有索引 `localhost:9200/_cat/indices`\n\n`PUT customer/external/1`：表示在customer索引下的external类型下保存1号数据为：\n```json\n{\n  name: \"hlczyn\"\n}\n```', 23, 1, 14, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221230/3.jpg', 1, 1, NULL, NULL, 1, 1, '2022-12-30 13:58:35', '2022-12-30 13:58:46', 1);
INSERT INTO `blog_info` VALUES (92, '可以', '可以', '可以', 22, 0, 13, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221230/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-30 17:14:27', '2022-12-30 17:14:27', 1);
INSERT INTO `blog_info` VALUES (93, '可以', '可以', '可以', 22, 0, 13, NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20221230/u=1085418351,3301086122&fm=253&fmt=auto&app=138&f=JPEG.webp', 1, 1, NULL, NULL, 1, 1, '2022-12-30 17:15:12', '2022-12-30 17:15:12', 1);

-- ----------------------------
-- Table structure for blog_tag
-- ----------------------------
DROP TABLE IF EXISTS `blog_tag`;
CREATE TABLE `blog_tag`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '标签名称',
  `number` int(11) NULL DEFAULT 0 COMMENT '博客数量',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 15 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客标签表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_tag
-- ----------------------------
INSERT INTO `blog_tag` VALUES (9, 'angular', 0, '2022-12-28 13:14:57', '2022-12-28 13:14:57', 1);
INSERT INTO `blog_tag` VALUES (8, 'react', 2, '2022-12-28 13:14:50', '2022-12-30 09:24:02', 1);
INSERT INTO `blog_tag` VALUES (7, 'vue', 16, '2022-12-28 13:12:54', '2022-12-29 17:44:44', 1);
INSERT INTO `blog_tag` VALUES (10, 'js', 28, '2022-12-28 13:19:02', '2022-12-29 17:45:40', 1);
INSERT INTO `blog_tag` VALUES (11, '其他', 9, '2022-12-28 14:59:19', '2022-12-29 17:36:22', 1);
INSERT INTO `blog_tag` VALUES (12, 'css', 5, '2022-12-28 15:49:02', '2022-12-30 09:29:40', 1);
INSERT INTO `blog_tag` VALUES (13, 'html', 5, '2022-12-28 15:49:06', '2022-12-30 17:15:12', 1);
INSERT INTO `blog_tag` VALUES (14, 'elasticsearch', 1, '2022-12-30 13:57:59', '2022-12-30 13:58:35', 1);

-- ----------------------------
-- Table structure for blog_type
-- ----------------------------
DROP TABLE IF EXISTS `blog_type`;
CREATE TABLE `blog_type`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '专栏名称',
  `desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '专栏简介',
  `number` int(11) NULL DEFAULT 0 COMMENT '博客数量',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 24 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客类型表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of blog_type
-- ----------------------------
INSERT INTO `blog_type` VALUES (23, 'elasticsearch', 'elasticsearch', 1, '2022-12-30 13:57:49', '2022-12-30 13:58:35', 1);
INSERT INTO `blog_type` VALUES (22, '其他', '其他的类型', 3, '2022-12-28 14:59:11', '2022-12-30 17:15:12', 1);
INSERT INTO `blog_type` VALUES (21, '浏览器', '浏览器相关', 12, '2022-12-28 13:14:32', '2022-12-29 11:48:42', 1);
INSERT INTO `blog_type` VALUES (20, '开发笔记', '开发过程中的笔记', 50, '2022-12-28 13:12:40', '2022-12-30 09:29:40', 1);

-- ----------------------------
-- Table structure for ums_admin
-- ----------------------------
DROP TABLE IF EXISTS `ums_admin`;
CREATE TABLE `ums_admin`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(63) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '管理员名称',
  `password` varchar(63) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '管理员密码',
  `last_login_ip` varchar(63) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT '最近一次登录IP地址',
  `last_login_time` datetime(0) NULL DEFAULT NULL COMMENT '最近一次登录时间',
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '\'' COMMENT '头像图片',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '管理员表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_admin
-- ----------------------------
INSERT INTO `ums_admin` VALUES (3, 'admin', '123456', '0:0:0:0:0:0:0:1', '2022-12-30 10:32:10', 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20220620/lihezong.webp', '2022-06-20 16:11:43', '2022-06-23 10:01:03', 1);
INSERT INTO `ums_admin` VALUES (4, 'test', '123456', '', NULL, 'https://hl-mall-tiny.oss-cn-chengdu.aliyuncs.com/hlmall/images/20220623/hw-logo.png', '2022-06-23 10:15:19', '2022-06-23 10:15:19', 1);

-- ----------------------------
-- Table structure for ums_admin_role
-- ----------------------------
DROP TABLE IF EXISTS `ums_admin_role`;
CREATE TABLE `ums_admin_role`  (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `admin_id` int(20) NULL DEFAULT NULL COMMENT '管理员id',
  `role_id` int(20) NULL DEFAULT NULL COMMENT '角色id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '后台用户和角色关系表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_admin_role
-- ----------------------------
INSERT INTO `ums_admin_role` VALUES (3, 3, 10);
INSERT INTO `ums_admin_role` VALUES (4, 4, 11);

-- ----------------------------
-- Table structure for ums_dict
-- ----------------------------
DROP TABLE IF EXISTS `ums_dict`;
CREATE TABLE `ums_dict`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `data_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '字典类型',
  `data_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '字典键',
  `data_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '字典值',
  `remark` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '备注',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_dict
-- ----------------------------
INSERT INTO `ums_dict` VALUES (1, 'express', 'ZTO', '中通快递', '快递公司', '2022-09-05 23:55:18', '2022-09-06 00:01:42', 1);
INSERT INTO `ums_dict` VALUES (2, 'express', 'YTO', '圆通速递', '快递公司', '2022-09-06 00:03:02', '2022-09-06 00:03:02', 1);
INSERT INTO `ums_dict` VALUES (3, 'express', 'YD', '韵达速递', '快递公司', '2022-09-06 00:03:20', '2022-09-06 00:03:20', 1);
INSERT INTO `ums_dict` VALUES (4, 'express', 'SF', '顺丰速运', '快递公司', '2022-09-06 00:04:01', '2022-09-06 18:12:36', 1);
INSERT INTO `ums_dict` VALUES (5, 'express', 'DBL', '德邦快递', '快递公司', '2022-09-06 00:04:17', '2022-09-06 00:04:17', 1);

-- ----------------------------
-- Table structure for ums_form
-- ----------------------------
DROP TABLE IF EXISTS `ums_form`;
CREATE TABLE `ums_form`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '表单名称',
  `form_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '表单key',
  `remark` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '表单备注',
  `config` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '表单配置',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '表单配置表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_form
-- ----------------------------
INSERT INTO `ums_form` VALUES (2, '用户表单', 'userFormKey', '用户的操作表单', '[{\"type\":\"input\",\"field\":\"username\",\"title\":\"用户名\",\"info\":\"\",\"props\":{\"placeholder\":\"请输入用户名称\",\"clearable\":true},\"_fc_drag_tag\":\"input\",\"hidden\":false,\"display\":true},{\"type\":\"input\",\"field\":\"password\",\"title\":\"密码\",\"info\":\"\",\"props\":{\"placeholder\":\"请输入密码\",\"type\":\"password\"},\"_fc_drag_tag\":\"input\",\"hidden\":false,\"display\":true,\"$required\":false}]', '2022-11-16 17:51:10', '2022-11-16 17:51:10', 1);
INSERT INTO `ums_form` VALUES (6, '博客类型', 'BlogTypeKey', '博客类型的表单', '[{\"type\":\"input\",\"field\":\"name\",\"title\":\"专栏名称\",\"info\":\"\",\"props\":{\"clearable\":true,\"placeholder\":\"请输入专栏名称\"},\"_fc_drag_tag\":\"input\",\"hidden\":false,\"display\":true,\"$required\":\"请输入专栏名称\"},{\"type\":\"input\",\"field\":\"desc\",\"title\":\"专栏简介\",\"info\":\"\",\"props\":{\"type\":\"textarea\",\"showWordLimit\":true,\"placeholder\":\"请输入专栏名称\",\"clearable\":true,\"rows\":3},\"_fc_drag_tag\":\"input\",\"hidden\":false,\"display\":true,\"$required\":false}]', '2022-12-12 23:35:42', '2022-12-12 23:35:42', 1);
INSERT INTO `ums_form` VALUES (7, '博客标签', 'BlogTagKey', '博客标签的表单', '[{\"type\":\"input\",\"field\":\"name\",\"title\":\"标签名称\",\"info\":\"\",\"props\":{\"clearable\":true},\"_fc_drag_tag\":\"input\",\"hidden\":false,\"display\":true,\"$required\":\"请输入标签名称\"}]', '2022-12-14 13:17:20', '2022-12-14 13:17:20', 1);

-- ----------------------------
-- Table structure for ums_menu
-- ----------------------------
DROP TABLE IF EXISTS `ums_menu`;
CREATE TABLE `ums_menu`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pid` int(11) NULL DEFAULT NULL COMMENT '父级id',
  `path` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '菜单地址',
  `name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '组件名称',
  `component` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '组件地址',
  `title` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '菜单名称',
  `is_link` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '超链接地址',
  `is_hide` tinyint(1) NULL DEFAULT NULL COMMENT '是否隐藏',
  `is_keep_alive` tinyint(1) NULL DEFAULT NULL COMMENT '是否缓存组件',
  `is_affix` tinyint(1) NULL DEFAULT NULL COMMENT '是否固定',
  `is_iframe` tinyint(1) NULL DEFAULT NULL COMMENT '是否内嵌窗口',
  `icon` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '菜单图标',
  `sort` int(10) NULL DEFAULT NULL COMMENT '排序',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 40 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '菜单表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_menu
-- ----------------------------
INSERT INTO `ums_menu` VALUES (1, NULL, '/system', 'system', 'layout', '系统管理', '', 0, 1, 0, 0, 'iconfont icon-bolangneng', 1);
INSERT INTO `ums_menu` VALUES (2, 1, '/system/meun', 'systemMenu', '/system/menu', '菜单管理', '', 0, 1, 0, 0, 'iconfont icon--chaifenhang', 1);
INSERT INTO `ums_menu` VALUES (4, 1, '/system/user', 'systemUser', '/system/user', '用户管理', '', 0, 1, 0, 0, 'ele-Avatar', 2);
INSERT INTO `ums_menu` VALUES (5, 1, '/system/role', 'systemRole', '/system/role', '角色管理', '', 0, 1, 0, 0, 'ele-Briefcase', 3);
INSERT INTO `ums_menu` VALUES (24, 1, '/system/config', 'systemConfig', '/system/config', '配置管理', '', 1, 1, 0, 0, 'iconfont icon-wenducanshu-05', 4);
INSERT INTO `ums_menu` VALUES (29, 1, '/system/dict', 'systemDict', '/system/dict', '字典管理', '', 1, 1, 0, 0, 'iconfont icon-728bianjiqi_zitidaxiao', 5);
INSERT INTO `ums_menu` VALUES (33, 1, '/system/form-config', 'form-config', '/system/form-config', '表单配置', NULL, 0, 1, 0, NULL, 'iconfont icon-xitongshezhi', 6);
INSERT INTO `ums_menu` VALUES (34, 1, '/system/form-designer', 'form-designer', '/system/form-designer', '表单设计', NULL, 0, 1, 0, NULL, 'iconfont icon-tongzhi1', 7);
INSERT INTO `ums_menu` VALUES (35, NULL, '/blog', 'blog', 'layout', '博客管理', '', 0, 1, 0, 0, 'iconfont icon-diannao1', 2);
INSERT INTO `ums_menu` VALUES (36, 35, '/blog/type', 'blogType', '/blog/type', '博客类型', '', 0, 1, 0, 0, 'iconfont icon-wenducanshu-05', 1);
INSERT INTO `ums_menu` VALUES (37, 35, '/blog/tag', 'blogTag', '/blog/tag', '博客标签', '', 0, 1, 0, 0, 'iconfont icon-wenducanshu-05', 2);
INSERT INTO `ums_menu` VALUES (38, 35, '/blog/blogInfo', 'blogInfo', '/blog/blogInfo', '博客详情', '', 0, 1, 0, 0, 'iconfont icon-bolangneng', 3);

-- ----------------------------
-- Table structure for ums_role
-- ----------------------------
DROP TABLE IF EXISTS `ums_role`;
CREATE TABLE `ums_role`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(63) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '角色名称',
  `key` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '角色key',
  `desc` varchar(1023) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '角色描述',
  `enabled` tinyint(1) NULL DEFAULT 1 COMMENT '是否启用',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name_UNIQUE`(`name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '角色表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_role
-- ----------------------------
INSERT INTO `ums_role` VALUES (10, '超级管理员', 'admin', '拥有所有权限', 1, '2022-06-20 11:13:09', '2022-11-14 16:15:11', NULL);
INSERT INTO `ums_role` VALUES (11, '普通管理员', 'common', '拥有部分权限', 1, '2022-06-20 11:27:15', '2022-06-21 11:50:05', 1);

-- ----------------------------
-- Table structure for ums_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `ums_role_menu`;
CREATE TABLE `ums_role_menu`  (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `role_id` int(20) NULL DEFAULT NULL COMMENT '角色id',
  `menu_id` int(20) NULL DEFAULT NULL COMMENT '菜单id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 399 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '角色和菜单关系表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_role_menu
-- ----------------------------
INSERT INTO `ums_role_menu` VALUES (387, 10, 1);
INSERT INTO `ums_role_menu` VALUES (388, 10, 2);
INSERT INTO `ums_role_menu` VALUES (389, 10, 4);
INSERT INTO `ums_role_menu` VALUES (390, 10, 5);
INSERT INTO `ums_role_menu` VALUES (391, 10, 24);
INSERT INTO `ums_role_menu` VALUES (392, 10, 29);
INSERT INTO `ums_role_menu` VALUES (393, 10, 33);
INSERT INTO `ums_role_menu` VALUES (394, 10, 34);
INSERT INTO `ums_role_menu` VALUES (395, 10, 35);
INSERT INTO `ums_role_menu` VALUES (396, 10, 36);
INSERT INTO `ums_role_menu` VALUES (397, 10, 37);
INSERT INTO `ums_role_menu` VALUES (398, 10, 38);

-- ----------------------------
-- Table structure for ums_system
-- ----------------------------
DROP TABLE IF EXISTS `ums_system`;
CREATE TABLE `ums_system`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `key_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '系统配置名',
  `key_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '系统配置值',
  `add_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `deleted` tinyint(1) NULL DEFAULT 1 COMMENT '逻辑删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 26 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '系统配置表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ums_system
-- ----------------------------
INSERT INTO `ums_system` VALUES (21, 'yyx_express_freight_value', '15', '2022-08-04 17:58:58', '2022-08-05 13:27:19', 1);
INSERT INTO `ums_system` VALUES (22, 'yyx_order_unpaid', '30', '2022-08-04 17:58:58', '2022-08-19 17:35:35', 1);
INSERT INTO `ums_system` VALUES (23, 'yyx_order_comment', '7', '2022-08-04 17:58:58', '2022-08-19 17:35:35', 1);
INSERT INTO `ums_system` VALUES (24, 'yyx_express_freight_min', '88', '2022-08-04 17:58:58', '2022-08-05 13:27:19', 1);
INSERT INTO `ums_system` VALUES (25, 'yyx_order_un_confirm', '7', '2022-08-04 17:58:58', '2022-08-19 17:35:35', 1);

SET FOREIGN_KEY_CHECKS = 1;
